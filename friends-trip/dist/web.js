(window.webpackJsonp=window.webpackJsonp||[]).push([[4,2],{0:function(module,exports,__webpack_require__){eval('exports = module.exports = __webpack_require__(5)(true);\n// imports\n\n\n// module\nexports.push([module.i, "body {\\n  display: flex;\\n  flex-direction: column;\\n  height: 100vh;\\n  margin: 0;\\n}\\nbody * {\\n  font-size: 20pt;\\n}\\n.message {\\n  border: 1px solid lightgray;\\n  padding: 10px;\\n}\\n.form-field > input[type=\\"text\\"],\\n.form-field > input[type=\\"password\\"] {\\n  width: 200px;\\n}\\n.pd-l-10 {\\n  padding: 10px;\\n}\\n.pd-b-20 {\\n  padding-bottom: 20px;\\n}\\n.details-form-field {\\n  padding: 10px 0px;\\n}\\n.error {\\n  color: red;\\n}\\n.jsgrid-delete-button {\\n  display: none;\\n}\\n.loading {\\n  display: none;\\n  position: absolute;\\n  width: 100%;\\n  height: 100%;\\n  opacity: 0.3;\\n  z-index: 1000;\\n  background: #000;\\n}\\n#app-log {\\n  position: absolute;\\n  width: 100%;\\n  height: 10%;\\n  z-index: 100;\\n  color: red;\\n  background-color: rgba(220, 220, 220, 0.5);\\n  display: none;\\n}\\n.head-block {\\n  display: flex;\\n  flex-direction: row;\\n  align-items: center;\\n  justify-content: space-between;\\n  box-sizing: border-box;\\n  padding: 20px;\\n}\\n.main-block {\\n  display: flex;\\n  flex-direction: row;\\n}\\n#transactionGrid {\\n  flex: 1 1 auto;\\n  overflow: visible;\\n}\\n#roomInfo {\\n  display: flex;\\n  flex-direction: column;\\n}\\n#room-users {\\n  padding: 0;\\n}\\n#room-users > li {\\n  padding: 10px;\\n  margin: 5px;\\n  list-style: none;\\n  box-shadow: 1px 1px 1px 1px grey;\\n}\\n#room-users > li:hover,\\n#room-users > li:active {\\n  background-color: rgba(172, 255, 47, 0.2);\\n}\\n.btn-logout {\\n  width: 150px;\\n  align-self: center;\\n}\\n.btn-logout,\\n#username,\\n#password {\\n  font-size: 20px;\\n}\\n", "", {"version":3,"sources":["/Users/volodymyrm/projects/powerGrid/friends-trip/src/styles/app.less","/Users/volodymyrm/projects/powerGrid/friends-trip/src/styles/app.less"],"names":[],"mappings":"AAAA;EACE,cAAA;EACA,uBAAA;EACA,cAAA;EAEA,UAAA;CCAD;ADGD;EACE,gBAAA;CCDD;ADID;EACE,4BAAA;EACA,cAAA;CCFD;ADQD;;EAEE,aAAA;CCND;ADSD;EACE,cAAA;CCPD;ADSD;EACE,qBAAA;CCPD;ADUD;EACE,kBAAA;CCRD;ADWD;EACE,WAAA;CCTD;ADYD;EACE,cAAA;CCVD;ADaD;EACE,cAAA;EACA,mBAAA;EACA,YAAA;EACA,aAAA;EACA,aAAA;EACA,cAAA;EACA,iBAAA;CCXD;ADcD;EACE,mBAAA;EACA,YAAA;EACA,YAAA;EACA,aAAA;EACA,WAAA;EACA,2CAAA;EACA,cAAA;CCZD;ADeD;EACE,cAAA;EACA,oBAAA;EACA,oBAAA;EACA,+BAAA;EAEA,uBAAA;EACA,cAAA;CCdD;ADiBD;EACE,cAAA;EACA,oBAAA;CCfD;ADkBD;EACE,eAAA;EACA,kBAAA;CChBD;ADmBD;EACE,cAAA;EACA,uBAAA;CCjBD;ADoBD;EACE,WAAA;CClBD;ADqBD;EACE,cAAA;EACA,YAAA;EACA,iBAAA;EACA,iCAAA;CCnBD;ADsBD;;EAEE,0CAAA;CCpBD;ADuBD;EACE,aAAA;EACA,mBAAA;CCrBD;ADwBD;;;EAGE,gBAAA;CCtBD","file":"app.less","sourcesContent":["body {\\n  display: flex;\\n  flex-direction: column;\\n  height: 100vh;\\n\\n  margin: 0;\\n}\\n\\nbody * {\\n  font-size: 20pt;\\n}\\n\\n.message {\\n  border: 1px solid lightgray;\\n  padding: 10px;\\n}\\n\\n.form-field {\\n}\\n\\n.form-field > input[type=\\"text\\"],\\n.form-field > input[type=\\"password\\"] {\\n  width: 200px;\\n}\\n\\n.pd-l-10 {\\n  padding: 10px;\\n}\\n.pd-b-20 {\\n  padding-bottom: 20px;\\n}\\n\\n.details-form-field {\\n  padding: 10px 0px;\\n}\\n\\n.error {\\n  color: red;\\n}\\n\\n.jsgrid-delete-button {\\n  display: none;\\n}\\n\\n.loading {\\n  display: none;\\n  position: absolute;\\n  width: 100%;\\n  height: 100%;\\n  opacity: 0.3;\\n  z-index: 1000;\\n  background: #000;\\n}\\n\\n#app-log {\\n  position: absolute;\\n  width: 100%;\\n  height: 10%;\\n  z-index: 100;\\n  color: red;\\n  background-color: rgba(220, 220, 220, 0.5);\\n  display: none;\\n}\\n\\n.head-block {\\n  display: flex;\\n  flex-direction: row;\\n  align-items: center;\\n  justify-content: space-between;\\n\\n  box-sizing: border-box;\\n  padding: 20px;\\n}\\n\\n.main-block {\\n  display: flex;\\n  flex-direction: row;\\n}\\n\\n#transactionGrid {\\n  flex: 1 1 auto;\\n  overflow: visible;\\n}\\n\\n#roomInfo {\\n  display: flex;\\n  flex-direction: column;\\n}\\n\\n#room-users {\\n  padding: 0;\\n}\\n\\n#room-users > li {\\n  padding: 10px;\\n  margin: 5px;\\n  list-style: none;\\n  box-shadow: 1px 1px 1px 1px grey;\\n}\\n\\n#room-users > li:hover,\\n#room-users > li:active {\\n  background-color: rgba(172, 255, 47, 0.2);\\n}\\n\\n.btn-logout {\\n  width: 150px;\\n  align-self: center;\\n}\\n\\n.btn-logout,\\n#username,\\n#password {\\n  font-size: 20px;\\n}\\n","body {\\n  display: flex;\\n  flex-direction: column;\\n  height: 100vh;\\n  margin: 0;\\n}\\nbody * {\\n  font-size: 20pt;\\n}\\n.message {\\n  border: 1px solid lightgray;\\n  padding: 10px;\\n}\\n.form-field > input[type=\\"text\\"],\\n.form-field > input[type=\\"password\\"] {\\n  width: 200px;\\n}\\n.pd-l-10 {\\n  padding: 10px;\\n}\\n.pd-b-20 {\\n  padding-bottom: 20px;\\n}\\n.details-form-field {\\n  padding: 10px 0px;\\n}\\n.error {\\n  color: red;\\n}\\n.jsgrid-delete-button {\\n  display: none;\\n}\\n.loading {\\n  display: none;\\n  position: absolute;\\n  width: 100%;\\n  height: 100%;\\n  opacity: 0.3;\\n  z-index: 1000;\\n  background: #000;\\n}\\n#app-log {\\n  position: absolute;\\n  width: 100%;\\n  height: 10%;\\n  z-index: 100;\\n  color: red;\\n  background-color: rgba(220, 220, 220, 0.5);\\n  display: none;\\n}\\n.head-block {\\n  display: flex;\\n  flex-direction: row;\\n  align-items: center;\\n  justify-content: space-between;\\n  box-sizing: border-box;\\n  padding: 20px;\\n}\\n.main-block {\\n  display: flex;\\n  flex-direction: row;\\n}\\n#transactionGrid {\\n  flex: 1 1 auto;\\n  overflow: visible;\\n}\\n#roomInfo {\\n  display: flex;\\n  flex-direction: column;\\n}\\n#room-users {\\n  padding: 0;\\n}\\n#room-users > li {\\n  padding: 10px;\\n  margin: 5px;\\n  list-style: none;\\n  box-shadow: 1px 1px 1px 1px grey;\\n}\\n#room-users > li:hover,\\n#room-users > li:active {\\n  background-color: rgba(172, 255, 47, 0.2);\\n}\\n.btn-logout {\\n  width: 150px;\\n  align-self: center;\\n}\\n.btn-logout,\\n#username,\\n#password {\\n  font-size: 20px;\\n}\\n"],"sourceRoot":""}]);\n\n// exports\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///0\n')},1:function(module,exports,__webpack_require__){"use strict";eval('\n\nObject.defineProperty(exports, "__esModule", {\n  value: true\n});\n\nvar _jquery = __webpack_require__(2);\n\nvar _jquery2 = _interopRequireDefault(_jquery);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nvar config = {\n  //wsUrl: \'ws://localhost:5000\',\n  wsUrl: "ws://pg-api.azurewebsites.net/api",\n  httpUrl: "http://pg-api.azurewebsites.net/api/",\n  //httpUrl: \'http://localhost:5000/api/\',\n  title: "Friends Trip v.0.1",\n  routes: {\n    Login: "login.html",\n    Transactions: "index.html",\n    Report: "report.html"\n  }\n};\n\n//function jsonp(url, callback) {\n//    var callbackName = \'jsonp_callback_\' + Math.round(100000 * Math.random());\n//    window[callbackName] = function(data) {\n//        delete window[callbackName];\n//        document.body.removeChild(script);\n//        callback(data);\n//    };\n\n//    var script = document.createElement(\'script\');\n//    script.src = url + (url.indexOf(\'?\') >= 0 ? \'&\' : \'?\') + \'callback=\' + callbackName;\n//    document.body.appendChild(script);\n//}\n\nvar app = {\n  EmptyRoom: {\n    Id: "",\n    Name: ""\n  },\n\n  context: {\n    Settings: {\n      filterByUserId: ""\n    },\n    CurrentUser: null,\n    CurrentRoom: null\n  },\n\n  generateUid: function generateUid() {\n    return "xxxxxxxx-xxxx-4xxx-yxxx-xxxxxxxxxxxx".replace(/[xy]/g, function (c) {\n      var r = Math.random() * 16 | 0,\n          v = c == "x" ? r : r & 0x3 | 0x8;\n      return v.toString(16);\n    });\n  },\n  onError: function onError(data) {\n    var logTxt = "⛔️ ERROR";\n    var errModel = JSON.parse(data.responseText);\n    app.log(logTxt + " - " + (errModel.message || "kakoy-to bag"));\n    console.log(JSON.stringify(data));\n  },\n  ajax: function ajax(actionUrl, data, method, successCallback, errorCallback) {\n    var authKey = app.context.CurrentUser == null ? null : app.context.CurrentUser.AuthToken;\n    var ajaxUrl = config.httpUrl + actionUrl;\n    app.showLoading(true);\n    return _jquery2.default.ajax({\n      type: method,\n      url: ajaxUrl,\n      contentType: "application/json",\n      data: JSON.stringify(data),\n      beforeSend: function beforeSend(request) {\n        request.setRequestHeader("authToken", authKey);\n      },\n      crossDomain: true,\n      cache: false,\n      success: function success(data) {\n        if (successCallback) successCallback(data);\n      },\n      error: function error(data) {\n        app.onError(data);\n      },\n      complete: function complete() {\n        app.showLoading(false);\n        console.log("ajax completed");\n      }\n    });\n  },\n\n\n  // ajax1(actionUrl, data, method, successCallback, errorCallback) {\n  // \t//var ajaxUrl = config.httpUrl + actionUrl;\n  // \tapp.showLoading(true);\n  // \tmethod = method || "POST";\n  // \tvar xhr = new XMLHttpRequest();\n  // \txhr.open(method, config.httpUrl + actionUrl);\n  // \txhr.setRequestHeader("Content-Type", "application/json");\n  // \txhr.onload = function() {\n  // \t\tdocument.getElementById("logs").innerText = "test4";\n  // \t\tapp.showLoading(false);\n  // \t\tif (xhr.status === 200) {\n  // \t\t\tdocument.getElementById("logs").innerText = "test5";\n  // \t\t\tif (successCallback)\n  // \t\t\t\tsuccessCallback(JSON.parse(xhr.responseText));\n  // \t\t} else {\n  // \t\t\tdocument.getElementById("logs").innerText = "test6";\n  // \t\t\tif (errorCallback) errorCallback(xhr);\n  // \t\t\telse app.onError(xhr);\n  // \t\t}\n  // \t};\n  // \txhr.send(JSON.stringify(data));\n  // },\n\n  showLoading: function showLoading(show) {\n    var loading = document.getElementById("loading");\n    if (show) loading.style.display = "block";else loading.style.display = "none";\n  },\n  getFromLocalStorage: function getFromLocalStorage(key) {\n    var data = JSON.parse(window.localStorage.getItem(key));\n    return data || null;\n  },\n  log: function log(text) {\n    var logBox = document.getElementById("app-log");\n    logBox.innerText = text;\n    logBox.style.display = "block";\n    var logId = app.generateUid();\n    logBox.logId = logId;\n    setTimeout(function () {\n      if (logId == logBox.logId) {\n        logBox.innerText = "";\n        logBox.style.display = "none";\n      }\n    }, 4000);\n  },\n  logout: function logout() {\n    window.localStorage.setItem("current-user", null);\n    app.checkAuth(null);\n  },\n  init: function init() {\n    document.title = config.title;\n    app.initContext();\n    app.checkAuth(app.context.CurrentUser);\n\n    //add logs component\n    (0, _jquery2.default)("body").prepend(\'<div id="app-log"></div>\');\n\n    //add global loading component\n    var loading = document.createElement("div");\n    document.body.insertBefore(loading, document.body.firstChild);\n    loading.setAttribute("id", "loading");\n    loading.classList.add("loading");\n  },\n  checkAuth: function checkAuth(user) {\n    var curPage = location.pathname.toLowerCase();\n    curPage = curPage.substring(curPage.lastIndexOf("/") + 1);\n    //document.getElementById("logs").innerText = "["+curPage+"]";\n    if (user && curPage == config.routes.Login) location.href = config.routes.Transactions;else if (!user && curPage != config.routes.Login) location.href = config.routes.Login;\n  },\n  initContext: function initContext() {\n    var settings = app.getFromLocalStorage("current-settings");\n    if (settings != null) app.context.Settings = settings;\n\n    var user = app.getFromLocalStorage("current-user");\n    app.context.CurrentUser = user;\n    var room = app.getFromLocalStorage("current-room");\n    if (room == null) app.context.CurrentRoom = app.EmptyRoom;else app.context.CurrentRoom = room;\n  },\n  saveSettings: function saveSettings() {\n    window.localStorage.setItem("current-settings", JSON.stringify(app.context.Settings));\n  },\n  onLoginDone: function onLoginDone(data) {\n    var user = data.data;\n\n    window.localStorage.setItem("current-user", JSON.stringify(user));\n    app.checkAuth(user);\n    //location.href = config.routes.Transactions;\n  },\n  onGetRoomDone: function onGetRoomDone(data) {\n    var room = data.data;\n    window.localStorage.setItem("current-room", JSON.stringify(room));\n  },\n  login: function login(username, password) {\n    app.ajax("auth/login", { username: username, password: password }, "POST", app.onLoginDone);\n  },\n  register: function register(username, password) {\n    app.ajax("auth/register", { username: username, password: password }, "POST", app.onLoginDone);\n  },\n  loadCurrentRoom: function loadCurrentRoom(callback) {\n    return app.ajax("room/status", {}, "POST", function (result) {\n      app.onGetRoomDone(result);\n      callback(result);\n    });\n  }\n};\n\nexports.default = app;//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8vLi9zcmMvanMvYXBwLmpzPzkwZTkiXSwibmFtZXMiOlsiY29uZmlnIiwid3NVcmwiLCJodHRwVXJsIiwidGl0bGUiLCJyb3V0ZXMiLCJMb2dpbiIsIlRyYW5zYWN0aW9ucyIsIlJlcG9ydCIsImFwcCIsIkVtcHR5Um9vbSIsIklkIiwiTmFtZSIsImNvbnRleHQiLCJTZXR0aW5ncyIsImZpbHRlckJ5VXNlcklkIiwiQ3VycmVudFVzZXIiLCJDdXJyZW50Um9vbSIsImdlbmVyYXRlVWlkIiwicmVwbGFjZSIsInIiLCJNYXRoIiwicmFuZG9tIiwidiIsImMiLCJ0b1N0cmluZyIsIm9uRXJyb3IiLCJkYXRhIiwibG9nVHh0IiwiZXJyTW9kZWwiLCJKU09OIiwicGFyc2UiLCJyZXNwb25zZVRleHQiLCJsb2ciLCJtZXNzYWdlIiwiY29uc29sZSIsInN0cmluZ2lmeSIsImFqYXgiLCJhY3Rpb25VcmwiLCJtZXRob2QiLCJzdWNjZXNzQ2FsbGJhY2siLCJlcnJvckNhbGxiYWNrIiwiYXV0aEtleSIsIkF1dGhUb2tlbiIsImFqYXhVcmwiLCJzaG93TG9hZGluZyIsIiQiLCJ0eXBlIiwidXJsIiwiY29udGVudFR5cGUiLCJiZWZvcmVTZW5kIiwicmVxdWVzdCIsInNldFJlcXVlc3RIZWFkZXIiLCJjcm9zc0RvbWFpbiIsImNhY2hlIiwic3VjY2VzcyIsImVycm9yIiwiY29tcGxldGUiLCJzaG93IiwibG9hZGluZyIsImRvY3VtZW50IiwiZ2V0RWxlbWVudEJ5SWQiLCJzdHlsZSIsImRpc3BsYXkiLCJnZXRGcm9tTG9jYWxTdG9yYWdlIiwia2V5Iiwid2luZG93IiwibG9jYWxTdG9yYWdlIiwiZ2V0SXRlbSIsInRleHQiLCJsb2dCb3giLCJpbm5lclRleHQiLCJsb2dJZCIsInNldFRpbWVvdXQiLCJsb2dvdXQiLCJzZXRJdGVtIiwiY2hlY2tBdXRoIiwiaW5pdCIsImluaXRDb250ZXh0IiwicHJlcGVuZCIsImNyZWF0ZUVsZW1lbnQiLCJib2R5IiwiaW5zZXJ0QmVmb3JlIiwiZmlyc3RDaGlsZCIsInNldEF0dHJpYnV0ZSIsImNsYXNzTGlzdCIsImFkZCIsInVzZXIiLCJjdXJQYWdlIiwibG9jYXRpb24iLCJwYXRobmFtZSIsInRvTG93ZXJDYXNlIiwic3Vic3RyaW5nIiwibGFzdEluZGV4T2YiLCJocmVmIiwic2V0dGluZ3MiLCJyb29tIiwic2F2ZVNldHRpbmdzIiwib25Mb2dpbkRvbmUiLCJvbkdldFJvb21Eb25lIiwibG9naW4iLCJ1c2VybmFtZSIsInBhc3N3b3JkIiwicmVnaXN0ZXIiLCJsb2FkQ3VycmVudFJvb20iLCJjYWxsYmFjayIsInJlc3VsdCJdLCJtYXBwaW5ncyI6Ijs7Ozs7O0FBQUE7Ozs7OztBQUVBLElBQU1BLFNBQVM7QUFDYjtBQUNBQyxTQUFPLG1DQUZNO0FBR2JDLFdBQVMsc0NBSEk7QUFJYjtBQUNBQyxTQUFPLG9CQUxNO0FBTWJDLFVBQVE7QUFDTkMsV0FBTyxZQUREO0FBRU5DLGtCQUFjLFlBRlI7QUFHTkMsWUFBUTtBQUhGO0FBTkssQ0FBZjs7QUFhQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQTs7QUFFQSxJQUFNQyxNQUFNO0FBQ1ZDLGFBQVc7QUFDVEMsUUFBSSxFQURLO0FBRVRDLFVBQU07QUFGRyxHQUREOztBQU1WQyxXQUFTO0FBQ1BDLGNBQVU7QUFDUkMsc0JBQWdCO0FBRFIsS0FESDtBQUlQQyxpQkFBYSxJQUpOO0FBS1BDLGlCQUFhO0FBTE4sR0FOQzs7QUFjVkMsYUFkVSx5QkFjSTtBQUNaLFdBQU8sdUNBQXVDQyxPQUF2QyxDQUErQyxPQUEvQyxFQUF3RCxhQUFLO0FBQ2xFLFVBQUlDLElBQUtDLEtBQUtDLE1BQUwsS0FBZ0IsRUFBakIsR0FBdUIsQ0FBL0I7QUFBQSxVQUNFQyxJQUFJQyxLQUFLLEdBQUwsR0FBV0osQ0FBWCxHQUFnQkEsSUFBSSxHQUFMLEdBQVksR0FEakM7QUFFQSxhQUFPRyxFQUFFRSxRQUFGLENBQVcsRUFBWCxDQUFQO0FBQ0QsS0FK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Q0QsR0F0S1M7QUF3S1ZJLE9BeEtVLGlCQXdLSkMsUUF4S0ksRUF3S01DLFFBeEtOLEVBd0tnQjtBQUN4QjdGLFFBQUk0QixJQUFKLENBQ0UsWUFERixFQUVFLEVBQUVnRSxVQUFVQSxRQUFaLEVBQXNCQyxVQUFVQSxRQUFoQyxFQUZGLEVBR0UsTUFIRixFQUlFN0YsSUFBSXlGLFdBSk47QUFNRCxHQS9LUztBQWlMVkssVUFqTFUsb0JBaUxERixRQWpMQyxFQWlMU0MsUUFqTFQsRUFpTG1CO0FBQzNCN0YsUUFBSTRCLElBQUosQ0FDRSxlQURGLEVBRUUsRUFBRWdFLFVBQVVBLFFBQVosRUFBc0JDLFVBQVVBLFFBQWhDLEVBRkYsRUFHRSxNQUhGLEVBSUU3RixJQUFJeUYsV0FKTjtBQU1ELEdBeExTO0FBMExWTSxpQkExTFUsMkJBMExNQyxRQTFMTixFQTBMZ0I7QUFDeEIsV0FBT2hHLElBQUk0QixJQUFKLENBQVMsYUFBVCxFQUF3QixFQUF4QixFQUE0QixNQUE1QixFQUFvQyxVQUFTcUUsTUFBVCxFQUFpQjtBQUMxRGpHLFVBQUkwRixhQUFKLENBQWtCTyxNQUFsQjtBQUNBRCxlQUFTQyxNQUFUO0FBQ0QsS0FITSxDQUFQO0FBSUQ7QUEvTFMsQ0FBWjs7a0JBa01lakcsRyIsImZpbGUiOiIxLmpzIiwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0ICQgZnJvbSBcImpxdWVyeVwiO1xuXG5jb25zdCBjb25maWcgPSB7XG4gIC8vd3NVcmw6ICd3czovL2xvY2FsaG9zdDo1MDAwJyxcbiAgd3NVcmw6IFwid3M6Ly9wZy1hcGkuYXp1cmV3ZWJzaXRlcy5uZXQvYXBpXCIsXG4gIGh0dHBVcmw6IFwiaHR0cDovL3BnLWFwaS5henVyZXdlYnNpdGVzLm5ldC9hcGkvXCIsXG4gIC8vaHR0cFVybDogJ2h0dHA6Ly9sb2NhbGhvc3Q6NTAwMC9hcGkvJyxcbiAgdGl0bGU6IFwiRnJpZW5kcyBUcmlwIHYuMC4xXCIsXG4gIHJvdXRlczoge1xuICAgIExvZ2luOiBcImxvZ2luLmh0bWxcIixcbiAgICBUcmFuc2FjdGlvbnM6IFwiaW5kZXguaHRtbFwiLFxuICAgIFJlcG9ydDogXCJyZXBvcnQuaHRtbFwiXG4gIH1cbn07XG5cbi8vZnVuY3Rpb24ganNvbnAodXJsLCBjYWxsYmFjaykge1xuLy8gICAgdmFyIGNhbGxiYWNrTmFtZSA9ICdqc29ucF9jYWxsYmFja18nICsgTWF0aC5yb3VuZCgxMDAwMDAgKiBNYXRoLnJhbmRvbSgpKTtcbi8vICAgIHdpbmRvd1tjYWxsYmFja05hbWVdID0gZnVuY3Rpb24oZGF0YSkge1xuLy8gICAgICAgIGRlbGV0ZSB3aW5kb3dbY2FsbGJhY2tOYW1lXTtcbi8vICAgICAgICBkb2N1bWVudC5ib2R5LnJlbW92ZUNoaWxkKHNjcmlwdCk7XG4vLyAgICAgICAgY2FsbGJhY2soZGF0YSk7XG4vLyAgICB9O1xuXG4vLyAgICB2YXIgc2NyaXB0ID0gZG9jdW1lbnQuY3JlYXRlRWxlbWVudCgnc2NyaXB0Jyk7XG4vLyAgICBzY3JpcHQuc3JjID0gdXJsICsgKHVybC5pbmRleE9mKCc/JykgPj0gMCA/ICcmJyA6ICc/JykgKyAnY2FsbGJhY2s9JyArIGNhbGxiYWNrTmFtZTtcbi8vICAgIGRvY3VtZW50LmJvZHkuYXBwZW5kQ2hpbGQoc2NyaXB0KTtcbi8vfVxuXG5jb25zdCBhcHAgPSB7XG4gIEVtcHR5Um9vbToge1xuICAgIElkOiBcIlwiLFxuICAgIE5hbWU6IFwiXCJcbiAgfSxcblxuICBjb250ZXh0OiB7XG4gICAgU2V0dGluZ3M6IHtcbiAgICAgIGZpbHRlckJ5VXNlcklkOiBcIlwiXG4gICAgfSxcbiAgICBDdXJyZW50VXNlcjogbnVsbCxcbiAgICBDdXJyZW50Um9vbTogbnVsbFxuICB9LFxuXG4gIGdlbmVyYXRlVWlkKCkge1xuICAgIHJldHVybiBcInh4eHh4eHh4LXh4eHgtNHh4eC15eHh4LXh4eHh4eHh4eHh4eFwiLnJlcGxhY2UoL1t4eV0vZywgYyA9PiB7XG4gICAgICB2YXIgciA9IChNYXRoLnJhbmRvbSgpICogMTYpIHwgMCxcbiAgICAgICAgdiA9IGMgPT0gXCJ4XCIgPyByIDogKHIgJiAweDMpIHwgMHg4O1xuICAgICAgcmV0dXJuIHYudG9TdHJpbmcoMTYpO1xuICAgIH0pO1xuICB9LFxuXG4gIG9uRXJyb3IoZGF0YSkge1xuICAgIHZhciBsb2dUeHQgPSBcIuKblO+4jyBFUlJPUlwiO1xuICAgIHZhciBlcnJNb2RlbCA9IEpTT04ucGFyc2UoZGF0YS5yZXNwb25zZVRleHQpO1xuICAgIGFwcC5sb2coYCR7bG9nVHh0fSAtICR7ZXJyTW9kZWwubWVzc2FnZSB8fCBcImtha295LXRvIGJhZ1wifWApO1xuICAgIGNvbnNvbGUubG9nKEpTT04uc3RyaW5naWZ5KGRhdGEpKTtcbiAgfSxcblxuICBhamF4KGFjdGlvblVybCwgZGF0YSwgbWV0aG9kLCBzdWNjZXNzQ2FsbGJhY2ssIGVycm9yQ2FsbGJhY2spIHtcbiAgICB2YXIgYXV0aEtleSA9XG4gICAgICBhcHAuY29udGV4dC5DdXJyZW50VXNlciA9PSBudWxsXG4gICAgICAgID8gbnVsbFxuICAgICAgICA6IGFwcC5jb250ZXh0LkN1cnJlbnRVc2VyLkF1dGhUb2tlbjtcbiAgICB2YXIgYWpheFVybCA9IGNvbmZpZy5odHRwVXJsICsgYWN0aW9uVXJsO1xuICAgIGFwcC5zaG93TG9hZGluZyh0cnVlKTtcbiAgICByZXR1cm4gJC5hamF4KHtcbiAgICAgIHR5cGU6IG1ldGhvZCxcbiAgICAgIHVybDogYWpheFVybCxcbiAgICAgIGNvbnRlbnRUeXBlOiBcImFwcGxpY2F0aW9uL2pzb25cIixcbiAgICAgIGRhdGE6IEpTT04uc3RyaW5naWZ5KGRhdGEpLFxuICAgICAgYmVmb3JlU2VuZDogZnVuY3Rpb24ocmVxdWVzdCkge1xuICAgICAgICByZXF1ZXN0LnNldFJlcXVlc3RIZWFkZXIoXCJhdXRoVG9rZW5cIiwgYXV0aEtleSk7XG4gICAgICB9LFxuICAgICAgY3Jvc3NEb21haW46IHRydWUsXG4gICAgICBjYWNoZTogZmFsc2UsXG4gICAgICBzdWNjZXNzOiBmdW5jdGlvbihkYXRhKSB7XG4gICAgICAgIGlmIChzdWNjZXNzQ2FsbGJhY2spIHN1Y2Nlc3NDYWxsYmFjayhkYXRhKTtcbiAgICAgIH0sXG4gICAgICBlcnJvcjogZnVuY3Rpb24oZGF0YSkge1xuICAgICAgICBhcHAub25FcnJvcihkYXRhKTtcbiAgICAgIH0sXG4gICAgICBjb21wbGV0ZTogZnVuY3Rpb24oKSB7XG4gICAgICAgIGFwcC5zaG93TG9hZGluZyhmYWxzZSk7XG4gICAgICAgIGNvbnNvbGUubG9nKFwiYWpheCBjb21wbGV0ZWRcIik7XG4gICAgICB9XG4gICAgfSk7XG4gIH0sXG5cbiAgLy8gYWpheDEoYWN0aW9uVXJsLCBkYXRhLCBtZXRob2QsIHN1Y2Nlc3NDYWxsYmFjaywgZXJyb3JDYWxsYmFjaykge1xuICAvLyBcdC8vdmFyIGFqYXhVcmwgPSBjb25maWcuaHR0cFVybCArIGFjdGlvblVybDtcbiAgLy8gXHRhcHAuc2hvd0xvYWRpbmcodHJ1ZSk7XG4gIC8vIFx0bWV0aG9kID0gbWV0aG9kIHx8IFwiUE9TVFwiO1xuICAvLyBcdHZhciB4aHIgPSBuZXcgWE1MSHR0cFJlcXVlc3QoKTtcbiAgLy8gXHR4aHIub3BlbihtZXRob2QsIGNvbmZpZy5odHRwVXJsICsgYWN0aW9uVXJsKTtcbiAgLy8gXHR4aHIuc2V0UmVxdWVzdEhlYWRlcihcIkNvbnRlbnQtVHlwZVwiLCBcImFwcGxpY2F0aW9uL2pzb25cIik7XG4gIC8vIFx0eGhyLm9ubG9hZCA9IGZ1bmN0aW9uKCkge1xuICAvLyBcdFx0ZG9jdW1lbnQuZ2V0RWxlbWVudEJ5SWQoXCJsb2dzXCIpLmlubmVyVGV4dCA9IFwidGVzdDRcIjtcbiAgLy8gXHRcdGFwcC5zaG93TG9hZGluZyhmYWxzZSk7XG4gIC8vIFx0XHRpZiAoeGhyLnN0YXR1cyA9PT0gMjAwKSB7XG4gIC8vIFx0XHRcdGRvY3VtZW50LmdldEVsZW1lbnRCeUlkKFwibG9nc1wiKS5pbm5lclRleHQgPSBcInRlc3Q1XCI7XG4gIC8vIFx0XHRcdGlmIChzdWNjZXNzQ2FsbGJhY2spXG4gIC8vIFx0XHRcdFx0c3VjY2Vzc0NhbGxiYWNrKEpTT04ucGFyc2UoeGhyLnJlc3BvbnNlVGV4dCkpO1xuICAvLyBcdFx0fSBlbHNlIHtcbiAgLy8gXHRcdFx0ZG9jdW1lbnQuZ2V0RWxlbWVudEJ5SWQoXCJsb2dzXCIpLmlubmVyVGV4dCA9IFwidGVzdDZcIjtcbiAgLy8gXHRcdFx0aWYgKGVycm9yQ2FsbGJhY2spIGVycm9yQ2FsbGJhY2soeGhyKTtcbiAgLy8gXHRcdFx0ZWxzZSBhcHAub25FcnJvcih4aHIpO1xuICAvLyBcdFx0fVxuICAvLyBcdH07XG4gIC8vIFx0eGhyLnNlbmQoSlNPTi5zdHJpbmdpZnkoZGF0YSkpO1xuICAvLyB9LFxuXG4gIHNob3dMb2FkaW5nKHNob3cpIHtcbiAgICB2YXIgbG9hZGluZyA9IGRvY3VtZW50LmdldEVsZW1lbnRCeUlkKFwibG9hZGluZ1wiKTtcbiAgICBpZiAoc2hvdykgbG9hZGluZy5zdHlsZS5kaXNwbGF5ID0gXCJibG9ja1wiO1xuICAgIGVsc2UgbG9hZGluZy5zdHlsZS5kaXNwbGF5ID0gXCJub25lXCI7XG4gIH0sXG5cbiAgZ2V0RnJvbUxvY2FsU3RvcmFnZShrZXkpIHtcbiAgICB2YXIgZGF0YSA9IEpTT04ucGFyc2Uod2luZG93LmxvY2FsU3RvcmFnZS5nZXRJdGVtKGtleSkpO1xuICAgIHJldHVybiBkYXRhIHx8IG51bGw7XG4gIH0sXG5cbiAgbG9nKHRleHQpIHtcbiAgICB2YXIgbG9nQm94ID0gZG9jdW1lbnQuZ2V0RWxlbWVudEJ5SWQoXCJhcHAtbG9nXCIpO1xuICAgIGxvZ0JveC5pbm5lclRleHQgPSB0ZXh0O1xuICAgIGxvZ0JveC5zdHlsZS5kaXNwbGF5ID0gXCJibG9ja1wiO1xuICAgIHZhciBsb2dJZCA9IGFwcC5nZW5lcmF0ZVVpZCgpO1xuICAgIGxvZ0JveC5sb2dJZCA9IGxvZ0lkO1xuICAgIHNldFRpbWVvdXQoZnVuY3Rpb24oKSB7XG4gICAgICBpZiAobG9nSWQgPT0gbG9nQm94LmxvZ0lkKSB7XG4gICAgICAgIGxvZ0JveC5pbm5lclRleHQgPSBcIlwiO1xuICAgICAgICBsb2dCb3guc3R5bGUuZGlzcGxheSA9IFwibm9uZVwiO1xuICAgICAgfVxuICAgIH0sIDQwMDApO1xuICB9LFxuXG4gIGxvZ291dCgpIHtcbiAgICB3aW5kb3cubG9jYWxTdG9yYWdlLnNldEl0ZW0oXCJjdXJyZW50LXVzZXJcIiwgbnVsbCk7XG4gICAgYXBwLmNoZWNrQXV0aChudWxsKTtcbiAgfSxcblxuICBpbml0KCkge1xuICAgIGRvY3VtZW50LnRpdGxlID0gY29uZmlnLnRpdGxlO1xuICAgIGFwcC5pbml0Q29udGV4dCgpO1xuICAgIGFwcC5jaGVja0F1dGgoYXBwLmNvbnRleHQuQ3VycmVudFVzZXIpO1xuXG4gICAgLy9hZGQgbG9ncyBjb21wb25lbnRcbiAgICAkKFwiYm9keVwiKS5wcmVwZW5kKCc8ZGl2IGlkPVwiYXBwLWxvZ1wiPjwvZGl2PicpO1xuXG4gICAgLy9hZGQgZ2xvYmFsIGxvYWRpbmcgY29tcG9uZW50XG4gICAgdmFyIGxvYWRpbmcgPSBkb2N1bWVudC5jcmVhdGVFbGVtZW50KFwiZGl2XCIpO1xuICAgIGRvY3VtZW50LmJvZHkuaW5zZXJ0QmVmb3JlKGxvYWRpbmcsIGRvY3VtZW50LmJvZHkuZmlyc3RDaGlsZCk7XG4gICAgbG9hZGluZy5zZXRBdHRyaWJ1dGUoXCJpZFwiLCBcImxvYWRpbmdcIik7XG4gICAgbG9hZGluZy5jbGFzc0xpc3QuYWRkKFwibG9hZGluZ1wiKTtcbiAgfSxcblxuICBjaGVja0F1dGgodXNlcikge1xuICAgIHZhciBjdXJQYWdlID0gbG9jYXRpb24ucGF0aG5hbWUudG9Mb3dlckNhc2UoKTtcbiAgICBjdXJQYWdlID0gY3VyUGFnZS5zdWJzdHJpbmcoY3VyUGFnZS5sYXN0SW5kZXhPZihcIi9cIikgKyAxKTtcbiAgICAvL2RvY3VtZW50LmdldEVsZW1lbnRCeUlkKFwibG9nc1wiKS5pbm5lclRleHQgPSBcIltcIitjdXJQYWdlK1wiXVwiO1xuICAgIGlmICh1c2VyICYmIGN1clBhZ2UgPT0gY29uZmlnLnJvdXRlcy5Mb2dpbilcbiAgICAgIGxvY2F0aW9uLmhyZWYgPSBjb25maWcucm91dGVzLlRyYW5zYWN0aW9ucztcbiAgICBlbHNlIGlmICghdXNlciAmJiBjdXJQYWdlICE9IGNvbmZpZy5yb3V0ZXMuTG9naW4pXG4gICAgICBsb2NhdGlvbi5ocmVmID0gY29uZmlnLnJvdXRlcy5Mb2dpbjtcbiAgfSxcblxuICBpbml0Q29udGV4dCgpIHtcbiAgICB2YXIgc2V0dGluZ3MgPSBhcHAuZ2V0RnJvbUxvY2FsU3RvcmFnZShcImN1cnJlbnQtc2V0dGluZ3NcIik7XG4gICAgaWYgKHNldHRpbmdzICE9IG51bGwpIGFwcC5jb250ZXh0LlNldHRpbmdzID0gc2V0dGluZ3M7XG5cbiAgICB2YXIgdXNlciA9IGFwcC5nZXRGcm9tTG9jYWxTdG9yYWdlKFwiY3VycmVudC11c2VyXCIpO1xuICAgIGFwcC5jb250ZXh0LkN1cnJlbnRVc2VyID0gdXNlcjtcbiAgICB2YXIgcm9vbSA9IGFwcC5nZXRGcm9tTG9jYWxTdG9yYWdlKFwiY3VycmVudC1yb29tXCIpO1xuICAgIGlmIChyb29tID09IG51bGwpIGFwcC5jb250ZXh0LkN1cnJlbnRSb29tID0gYXBwLkVtcHR5Um9vbTtcbiAgICBlbHNlIGFwcC5jb250ZXh0LkN1cnJlbnRSb29tID0gcm9vbTtcbiAgfSxcblxuICBzYXZlU2V0dGluZ3MoKSB7XG4gICAgd2luZG93LmxvY2FsU3RvcmFnZS5zZXRJdGVtKFxuICAgICAgXCJjdXJyZW50LXNldHRpbmdzXCIsXG4gICAgICBKU09OLnN0cmluZ2lmeShhcHAuY29udGV4dC5TZXR0aW5ncylcbiAgICApO1xuICB9LFxuXG4gIG9uTG9naW5Eb25lKGRhdGEpIHtcbiAgICB2YXIgdXNlciA9IGRhdGEuZGF0YTtcblxuICAgIHdpbmRvdy5sb2NhbFN0b3JhZ2Uuc2V0SXRlbShcImN1cnJlbnQtdXNlclwiLCBKU09OLnN0cmluZ2lmeSh1c2VyKSk7XG4gICAgYXBwLmNoZWNrQXV0aCh1c2VyKTtcbiAgICAvL2xvY2F0aW9uLmhyZWYgPSBjb25maWcucm91dGVzLlRyYW5zYWN0aW9ucztcbiAgfSxcblxuICBvbkdldFJvb21Eb25lKGRhdGEpIHtcbiAgICB2YXIgcm9vbSA9IGRhdGEuZGF0YTtcbiAgICB3aW5kb3cubG9jYWxTdG9yYWdlLnNldEl0ZW0oXCJjdXJyZW50LXJvb21cIiwgSlNPTi5zdHJpbmdpZnkocm9vbSkpO1xuICB9LFxuXG4gIGxvZ2luKHVzZXJuYW1lLCBwYXNzd29yZCkge1xuICAgIGFwcC5hamF4KFxuICAgICAgXCJhdXRoL2xvZ2luXCIsXG4gICAgICB7IHVzZXJuYW1lOiB1c2VybmFtZSwgcGFzc3dvcmQ6IHBhc3N3b3JkIH0sXG4gICAgICBcIlBPU1RcIixcbiAgICAgIGFwcC5vbkxvZ2luRG9uZVxuICAgICk7XG4gIH0sXG5cbiAgcmVnaXN0ZXIodXNlcm5hbWUsIHBhc3N3b3JkKSB7XG4gICAgYXBwLmFqYXgoXG4gICAgICBcImF1dGgvcmVnaXN0ZXJcIixcbiAgICAgIHsgdXNlcm5hbWU6IHVzZXJuYW1lLCBwYXNzd29yZDogcGFzc3dvcmQgfSxcbiAgICAgIFwiUE9TVFwiLFxuICAgICAgYXBwLm9uTG9naW5Eb25lXG4gICAgKTtcbiAgfSxcblxuICBsb2FkQ3VycmVudFJvb20oY2FsbGJhY2spIHtcbiAgICByZXR1cm4gYXBwLmFqYXgoXCJyb29tL3N0YXR1c1wiLCB7fSwgXCJQT1NUXCIsIGZ1bmN0aW9uKHJlc3VsdCkge1xuICAgICAgYXBwLm9uR2V0Um9vbURvbmUocmVzdWx0KTtcbiAgICAgIGNhbGxiYWNrKHJlc3VsdCk7XG4gICAgfSk7XG4gIH1cbn07XG5cbmV4cG9ydCBkZWZhdWx0IGFwcDtcbiJdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///1\n')},13:function(module,exports,__webpack_require__){"use strict";eval('\n\nvar _react = __webpack_require__(4);\n\nvar _react2 = _interopRequireDefault(_react);\n\nvar _reactDom = __webpack_require__(15);\n\nvar _reactDom2 = _interopRequireDefault(_reactDom);\n\nvar _jquery = __webpack_require__(2);\n\nvar _jquery2 = _interopRequireDefault(_jquery);\n\nvar _app = __webpack_require__(1);\n\nvar _app2 = _interopRequireDefault(_app);\n\nvar _grid = __webpack_require__(23);\n\nvar _grid2 = _interopRequireDefault(_grid);\n\n__webpack_require__(3);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nfunction moneyRound(value) {\n  return Math.round(value * 100) / 100;\n}\n\nfunction logout() {\n  if (confirm("You will not be able log in back if you will not have an Internet, are you want to log out anyway?")) {\n    _app2.default.logout();\n    //location.href = config.routes.Login;\n  }\n  return;\n  false;\n}\n\nfunction refreshGrid() {\n  var online = navigator.onLine;\n\n  _reactDom2.default.render((0, _grid2.default)("loadData"), document.getElementById("transactionGrid"));\n}\n\nfunction addTransaction(item) {\n  //todo: @vm do not put item on server directly\n  // put it into grid/storage\n  // then ELSEWHERE try to sync with server, if online === ok\n  _app2.default.ajax("trans/addorupdate", item, "POST", refreshGrid);\n  return false;\n}\n\n//document.forms.transaction.onsubmit = function () {\n//    ajax(\'transaction/save\', { AuthToken: CurrentUser().AuthToken }, \'POST\', onSaved, onError);\n//    return false;\n//};\n\nfunction getCheckedUsers() {\n  var users = [];\n  (0, _jquery2.default)("#add-transaction-users input[type=\'checkbox\']").filter(":checked").each(function (ind, el) {\n    var inp = (0, _jquery2.default)(el).closest("div").find(\'input[type="number"]\');\n    users.push(inp);\n  });\n  return users;\n}\n\nfunction onPageLoaded() {\n  (0, _jquery2.default)("#filterByUserId").val(_app2.default.context.Settings.filterByUserId);\n  var user = _app2.default.context.CurrentUser;\n  document.getElementById("username").innerText = user.Name;\n  document.getElementById("userid").innerText = user.Id;\n  document.getElementById("authToken").value = user.AuthToken;\n\n  _app2.default.loadCurrentRoom(function () {\n    console.log("load room done");\n    (0, _jquery2.default)("#roomid").text(_app2.default.context.CurrentRoom.Id);\n    (0, _jquery2.default)("#roomname").text(_app2.default.context.CurrentRoom.Name);\n    (0, _jquery2.default)("#room-users").html("");\n    for (var userKey in _app2.default.context.CurrentRoom.Users) {\n      var user = _app2.default.context.CurrentRoom.Users[userKey];\n      (0, _jquery2.default)("#room-users").append("<li onclick=\'onUserClick(this)\' systemId=\'" + user.Id + "\'>" + user.Name + " (" + user.Id + ")</li>");\n    }\n  });\n\n  _reactDom2.default.render((0, _grid2.default)("jsgrid"), document.getElementById("transactionGrid"));\n  (0, _jquery2.default)("#transactionGrid").jsGrid({\n    editing: false,\n    autoload: true,\n    paging: true,\n    pageLoading: true,\n    pageSize: 10,\n    pageIndex: 1,\n    pageButtonCount: 10,\n\n    controller: {\n      loadData: function loadData(filter) {\n        var startIndex = (filter.pageIndex - 1) * filter.pageSize;\n\n        var deferred = _jquery2.default.Deferred();\n\n        var filterByUserId = (0, _jquery2.default)("#filterByUserId").val();\n\n        //todo: @vm ESLI error THEN do nothing\n        _app2.default.ajax("trans/list", {\n          FilterByUserId: filterByUserId,\n          PageIndex: filter.pageIndex - 1,\n          PageSize: filter.pageSize\n        }, "POST", function (response) {\n          var result = response.data.data;\n          //data: db.clients.slice(startIndex, startIndex + filter.pageSize),\n          //  itemsCount: db.clients.length\n          //return{\n          //data: result.data,\n          //itemsCount: result.totalCount\n          //};\n          _jquery2.default.map(result.data, function (val, i) {\n            var oweText = "";\n            for (var userKey in val.owe) {\n              var user = val.owe[userKey];\n              oweText += "<div class=\'pd-b-20\'>" + user.user + ": " + user.amount + "</div>";\n            }\n            val.oweText = oweText;\n          });\n          deferred.resolve({\n            data: result.data,\n            itemsCount: result.totalCount\n          });\n        });\n\n        return deferred.promise();\n      }\n    },\n\n    //deleteConfirm: function (item) {\n    //return "The item \\"" + item.Id + "\\" will be removed. Are you sure?";\n    //},\n\n    rowClick: function rowClick(args) {\n      showDetailsDialog("Edit", args.item);\n    },\n\n    fields: [{ name: "id", type: "text", width: 150, visible: false, title: "Id" }, { name: "payer", type: "text", width: 100, title: "Payer" }, { name: "fullAmount", type: "number", width: 80, title: "Amount" }, { name: "time", type: "text", width: 100, title: "Time" }, { name: "oweText", type: "text", width: 150, title: "Owe" }, { name: "description", type: "text", width: 100, title: "Description" }]\n  });\n\n  (0, _jquery2.default)("#pager").on("change", function () {\n    var page = parseInt((0, _jquery2.default)(this).val(), 10);\n\n    _reactDom2.default.render((0, _grid2.default)("loadData"), document.getElementById("transactionGrid"));\n    (0, _jquery2.default)("#transactionGrid").jsGrid("openPage", page);\n  });\n\n  (0, _jquery2.default)("#detailsDialog").dialog({\n    autoOpen: false,\n    width: 700,\n    close: function close() {\n      (0, _jquery2.default)("#detailsForm")\n      //.validate()//todo: make own validation\n      .resetForm();\n      (0, _jquery2.default)("#detailsForm").find(".error").removeClass("error");\n    }\n  });\n\n  (0, _jquery2.default)("#detailsForm").validate({\n    rules: {\n      //description: "required",\n      fullAmount: { required: true\n        //address: { required: true, minlength: 10 },\n        //country: "required"\n      } },\n    messages: {\n      // name: "Please enter name",\n      fullAmount: "Please enter valid amount"\n      //address: "Please enter address (more than 10 chars)",\n      //country: "Please select country"\n    },\n    submitHandler: function submitHandler(event) {\n      formSubmitHandler(event);\n    }\n  });\n\n  var formSubmitHandler = _jquery2.default.noop;\n}\n\nfunction showDetailsDialog(dialogType, item) {\n  (0, _jquery2.default)("#transactionId").val(item.id);\n  (0, _jquery2.default)("#description").val(item.description);\n  (0, _jquery2.default)("#fullAmount").val(item.fullAmount);\n  (0, _jquery2.default)("#splitEqually").prop("checked", false);\n  (0, _jquery2.default)("#splitOnYou").prop("checked", false);\n  (0, _jquery2.default)("#add-transaction-users").html("");\n\n  for (var userKey in _app2.default.context.CurrentRoom.Users) {\n    var curUserId = _app2.default.context.CurrentUser.Id;\n    var user = _app2.default.context.CurrentRoom.Users[userKey];\n\n    var checked = curUserId == user.Id ? "" : "checked=\'checked\'";\n    var enabled = curUserId == user.Id ? "disabled=\'disabled\'" : "";\n    var val = 0;\n\n    if (dialogType == "Edit") {\n      var found = jQuery.grep(item.owe, function (n, i) {\n        return n.user == user.Name;\n      });\n      if (found.length == 1) val = found[0].amount;\n    }\n\n    (0, _jquery2.default)("#add-transaction-users").append("<div><input type=\'checkbox\' " + checked + " onclick=\'userActiveChanged(this, \\"" + user.Id + "\\");\'>" + user.Name + ": " + "<input type=\'number\' " + enabled + " min=\'0\' id=\'add-trans-user-" + user.Id + "\' systemId=\'" + user.Id + "\' onblur=\'onUserAmtChanged(this);\' value=\'" + val + "\' />" + "</div>");\n  }\n\n  (0, _jquery2.default)("#detailsDialog").dialog("option", "title", dialogType + " Transaction").dialog("open");\n}\n\nfunction formSubmitHandler(event) {\n  saveClient(client, dialogType === "Add");\n  event.preventDefault();\n  return false;\n}\n\nfunction saveClient(item, isNew) {\n  if ((0, _jquery2.default)("#transactionId").val() != "" && !confirm("It\'s old trnsaction, are you sure you want to change it?")) {\n    return false;\n  }\n\n  var usersInfo = [];\n  _jquery2.default.each(getCheckedUsers(), function (ind, el) {\n    var amt = moneyRound(parseFloat((0, _jquery2.default)(el).val()));\n    if (isNaN(amt)) amt = 0;\n    usersInfo.push({\n      UserId: (0, _jquery2.default)(el).attr("systemId"),\n      Amount: amt\n    });\n  });\n  //save on server\n  var item = {\n    Id: (0, _jquery2.default)("#transactionId").val(),\n    Description: (0, _jquery2.default)("#description").val(),\n    Amount: moneyRound(parseFloat((0, _jquery2.default)("#fullAmount").val())),\n    IsSplitAmountEqually: (0, _jquery2.default)("#splitEqually").is(":checked"),\n    IsCurrentUserInSplitListToo: (0, _jquery2.default)("#splitOnYou").is(":checked"),\n    OweUsers: usersInfo\n  };\n\n  //Dt\n  //Id\n\n  (0, _jquery2.default)("#detailsDialog").dialog("close");\n  //todo: @vm make all calculations on CLIENT then send calc data to SERVER\n  addTransaction(item);\n  return false;\n}\n\nfunction onFilterByUserIdChanged() {\n  _app2.default.context.Settings.filterByUserId = (0, _jquery2.default)("#filterByUserId").val();\n  _app2.default.saveSettings();\n  refreshGrid();\n}\n\nfunction onUserClick(item) {\n  (0, _jquery2.default)("#filterByUserId").val((0, _jquery2.default)(item).attr("systemId")).blur();\n}\n\nfunction onUserAmtChanged(item) {\n  if ((0, _jquery2.default)("#fullAmount").val() == "") {\n    (0, _jquery2.default)("#fullAmount").val((0, _jquery2.default)(item).val());\n  }\n}\n\nfunction userActiveChanged(el, userId) {\n  var amtInput = (0, _jquery2.default)(el).closest("div").find("input[type=\'number\']");\n  if ((0, _jquery2.default)(el).is(":checked")) amtInput.prop("disabled", false);else amtInput.prop("disabled", true);\n}\n\n(0, _jquery2.default)(function () {\n  _app2.default.init();\n  onPageLoaded();\n});//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///13\n')},23:function(module,exports,__webpack_require__){"use strict";eval('\n\nObject.defineProperty(exports, "__esModule", {\n  value: true\n});\nexports.default = Grid;\n\nvar _react = __webpack_require__(4);\n\nvar _react2 = _interopRequireDefault(_react);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nvar title = "react grid test component";\n\nfunction Grid() {\n  return _react2.default.createElement(\n    "div",\n    null,\n    title\n  );\n}//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8vLi9zcmMvanMvZ3JpZC5qc3g/YjM1YiJdLCJuYW1lcyI6WyJHcmlkIiwidGl0bGUiXSwibWFwcGluZ3MiOiI7Ozs7O2tCQUl3QkEsSTs7QUFKeEI7Ozs7OztBQUVBLElBQU1DLFFBQVEsMkJBQWQ7O0FBRWUsU0FBU0QsSUFBVCxHQUFnQjtBQUM3QixTQUFPO0FBQUE7QUFBQTtBQUFNQztBQUFOLEdBQVA7QUFDRCIsImZpbGUiOiIyMy5qcyIsInNvdXJjZXNDb250ZW50IjpbImltcG9ydCBSZWFjdCBmcm9tIFwicmVhY3RcIjtcblxuY29uc3QgdGl0bGUgPSBcInJlYWN0IGdyaWQgdGVzdCBjb21wb25lbnRcIjtcblxuZXhwb3J0IGRlZmF1bHQgZnVuY3Rpb24gR3JpZCgpIHtcbiAgcmV0dXJuIDxkaXY+e3RpdGxlfTwvZGl2Pjtcbn1cbiJdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///23\n')},3:function(module,exports,__webpack_require__){eval("\nvar content = __webpack_require__(0);\n\nif(typeof content === 'string') content = [[module.i, content, '']];\n\nvar transform;\nvar insertInto;\n\n\n\nvar options = {\"hmr\":true}\n\noptions.transform = transform\noptions.insertInto = undefined;\n\nvar update = __webpack_require__(6)(content, options);\n\nif(content.locals) module.exports = content.locals;\n\nif(true) {\n\tmodule.hot.accept(0, function() {\n\t\tvar newContent = __webpack_require__(0);\n\n\t\tif(typeof newContent === 'string') newContent = [[module.i, newContent, '']];\n\n\t\tvar locals = (function(a, b) {\n\t\t\tvar key, idx = 0;\n\n\t\t\tfor(key in a) {\n\t\t\t\tif(!b || a[key] !== b[key]) return false;\n\t\t\t\tidx++;\n\t\t\t}\n\n\t\t\tfor(key in b) idx--;\n\n\t\t\treturn idx === 0;\n\t\t}(content.locals, newContent.locals));\n\n\t\tif(!locals) throw new Error('Aborting CSS HMR due to changed css-modules locals.');\n\n\t\tupdate(newContent);\n\t});\n\n\tmodule.hot.dispose(function() { update(); });\n}//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8vLi9zcmMvc3R5bGVzL2FwcC5sZXNzPzc0NDIiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IjtBQUNBOztBQUVBOztBQUVBO0FBQ0E7Ozs7QUFJQSxlQUFlOztBQUVmO0FBQ0E7O0FBRUE7O0FBRUE7O0FBRUE7QUFDQTtBQUNBOztBQUVBOztBQUVBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7O0FBRUE7O0FBRUE7QUFDQSxHQUFHOztBQUVIOztBQUVBO0FBQ0EsRUFBRTs7QUFFRixnQ0FBZ0MsVUFBVSxFQUFFO0FBQzVDIiwiZmlsZSI6IjMuanMiLCJzb3VyY2VzQ29udGVudCI6WyJcbnZhciBjb250ZW50ID0gcmVxdWlyZShcIiEhLi4vLi4vbm9kZV9tb2R1bGVzL2Nzcy1sb2FkZXIvaW5kZXguanM/P3JlZi0tNS0xIS4uLy4uL25vZGVfbW9kdWxlcy9sZXNzLWxvYWRlci9kaXN0L2Nqcy5qcz8/cmVmLS01LTIhLi9hcHAubGVzc1wiKTtcblxuaWYodHlwZW9mIGNvbnRlbnQgPT09ICdzdHJpbmcnKSBjb250ZW50ID0gW1ttb2R1bGUuaWQsIGNvbnRlbnQsICcnXV07XG5cbnZhciB0cmFuc2Zvcm07XG52YXIgaW5zZXJ0SW50bztcblxuXG5cbnZhciBvcHRpb25zID0ge1wiaG1yXCI6dHJ1ZX1cblxub3B0aW9ucy50cmFuc2Zvcm0gPSB0cmFuc2Zvcm1cbm9wdGlvbnMuaW5zZXJ0SW50byA9IHVuZGVmaW5lZDtcblxudmFyIHVwZGF0ZSA9IHJlcXVpcmUoXCIhLi4vLi4vbm9kZV9tb2R1bGVzL3N0eWxlLWxvYWRlci9saWIvYWRkU3R5bGVzLmpzXCIpKGNvbnRlbnQsIG9wdGlvbnMpO1xuXG5pZihjb250ZW50LmxvY2FscykgbW9kdWxlLmV4cG9ydHMgPSBjb250ZW50LmxvY2FscztcblxuaWYobW9kdWxlLmhvdCkge1xuXHRtb2R1bGUuaG90LmFjY2VwdChcIiEhLi4vLi4vbm9kZV9tb2R1bGVzL2Nzcy1sb2FkZXIvaW5kZXguanM/P3JlZi0tNS0xIS4uLy4uL25vZGVfbW9kdWxlcy9sZXNzLWxvYWRlci9kaXN0L2Nqcy5qcz8/cmVmLS01LTIhLi9hcHAubGVzc1wiLCBmdW5jdGlvbigpIHtcblx0XHR2YXIgbmV3Q29udGVudCA9IHJlcXVpcmUoXCIhIS4uLy4uL25vZGVfbW9kdWxlcy9jc3MtbG9hZGVyL2luZGV4LmpzPz9yZWYtLTUtMSEuLi8uLi9ub2RlX21vZHVsZXMvbGVzcy1sb2FkZXIvZGlzdC9janMuanM/P3JlZi0tNS0yIS4vYXBwLmxlc3NcIik7XG5cblx0XHRpZih0eXBlb2YgbmV3Q29udGVudCA9PT0gJ3N0cmluZycpIG5ld0NvbnRlbnQgPSBbW21vZHVsZS5pZCwgbmV3Q29udGVudCwgJyddXTtcblxuXHRcdHZhciBsb2NhbHMgPSAoZnVuY3Rpb24oYSwgYikge1xuXHRcdFx0dmFyIGtleSwgaWR4ID0gMDtcblxuXHRcdFx0Zm9yKGtleSBpbiBhKSB7XG5cdFx0XHRcdGlmKCFiIHx8IGFba2V5XSAhPT0gYltrZXldKSByZXR1cm4gZmFsc2U7XG5cdFx0XHRcdGlkeCsrO1xuXHRcdFx0fVxuXG5cdFx0XHRmb3Ioa2V5IGluIGIpIGlkeC0tO1xuXG5cdFx0XHRyZXR1cm4gaWR4ID09PSAwO1xuXHRcdH0oY29udGVudC5sb2NhbHMsIG5ld0NvbnRlbnQubG9jYWxzKSk7XG5cblx0XHRpZighbG9jYWxzKSB0aHJvdyBuZXcgRXJyb3IoJ0Fib3J0aW5nIENTUyBITVIgZHVlIHRvIGNoYW5nZWQgY3NzLW1vZHVsZXMgbG9jYWxzLicpO1xuXG5cdFx0dXBkYXRlKG5ld0NvbnRlbnQpO1xuXHR9KTtcblxuXHRtb2R1bGUuaG90LmRpc3Bvc2UoZnVuY3Rpb24oKSB7IHVwZGF0ZSgpOyB9KTtcbn0iXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///3\n")}},[[13,1,0]]]);