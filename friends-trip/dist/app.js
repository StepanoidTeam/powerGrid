(window.webpackJsonp=window.webpackJsonp||[]).push([[2],{7:function(module,exports,__webpack_require__){"use strict";eval('\n\nObject.defineProperty(exports, "__esModule", {\n  value: true\n});\n\nvar _jquery = __webpack_require__(8);\n\nvar _jquery2 = _interopRequireDefault(_jquery);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nvar config = {\n  //wsUrl: \'ws://localhost:5000\',\n  wsUrl: "ws://pg-api.azurewebsites.net/api",\n  httpUrl: "//pg-api.azurewebsites.net/api/",\n  //httpUrl: \'http://localhost:5000/api/\',\n  title: "Friends Trip v.0.1",\n  routes: {\n    Login: "login.html",\n    Transactions: "index.html",\n    Report: "report.html"\n  }\n};\n\n//function jsonp(url, callback) {\n//    var callbackName = \'jsonp_callback_\' + Math.round(100000 * Math.random());\n//    window[callbackName] = function(data) {\n//        delete window[callbackName];\n//        document.body.removeChild(script);\n//        callback(data);\n//    };\n\n//    var script = document.createElement(\'script\');\n//    script.src = url + (url.indexOf(\'?\') >= 0 ? \'&\' : \'?\') + \'callback=\' + callbackName;\n//    document.body.appendChild(script);\n//}\n\nvar app = {\n  EmptyRoom: {\n    Id: "",\n    Name: ""\n  },\n\n  context: {\n    Settings: {\n      filterByUserId: ""\n    },\n    CurrentUser: null,\n    CurrentRoom: null,\n    Table: []\n  },\n\n  generateUid: function generateUid() {\n    return "xxxxxxxx-xxxx-4xxx-yxxx-xxxxxxxxxxxx".replace(/[xy]/g, function (c) {\n      var r = Math.random() * 16 | 0,\n          v = c == "x" ? r : r & 0x3 | 0x8;\n      return v.toString(16);\n    });\n  },\n  ajax: function ajax(actionUrl, data, method, successCallback, errorCallback) {\n    var _this = this;\n\n    var authKey = app.context.CurrentUser == null ? null : app.context.CurrentUser.AuthToken;\n    var ajaxUrl = config.httpUrl + actionUrl;\n    app.showLoading(true);\n    return _jquery2.default.ajax({\n      type: method,\n      url: ajaxUrl,\n      contentType: "application/json",\n      data: JSON.stringify(data),\n      beforeSend: function beforeSend(request) {\n        request.setRequestHeader("authToken", authKey);\n      },\n      crossDomain: true,\n      cache: false,\n      success: function success(data) {\n        if (successCallback) successCallback(data);\n      },\n      error: function error(data) {\n        if (data.status === 401) {\n          _this.logout();\n        }\n        app.onError(data);\n      },\n      complete: function complete() {\n        app.showLoading(false);\n        console.log("ajax completed");\n      }\n    });\n  },\n\n\n  // ajax1(actionUrl, data, method, successCallback, errorCallback) {\n  // \t//var ajaxUrl = config.httpUrl + actionUrl;\n  // \tapp.showLoading(true);\n  // \tmethod = method || "POST";\n  // \tvar xhr = new XMLHttpRequest();\n  // \txhr.open(method, config.httpUrl + actionUrl);\n  // \txhr.setRequestHeader("Content-Type", "application/json");\n  // \txhr.onload = function() {\n  // \t\tdocument.getElementById("logs").innerText = "test4";\n  // \t\tapp.showLoading(false);\n  // \t\tif (xhr.status === 200) {\n  // \t\t\tdocument.getElementById("logs").innerText = "test5";\n  // \t\t\tif (successCallback)\n  // \t\t\t\tsuccessCallback(JSON.parse(xhr.responseText));\n  // \t\t} else {\n  // \t\t\tdocument.getElementById("logs").innerText = "test6";\n  // \t\t\tif (errorCallback) errorCallback(xhr);\n  // \t\t\telse app.onError(xhr);\n  // \t\t}\n  // \t};\n  // \txhr.send(JSON.stringify(data));\n  // },\n\n  showLoading: function showLoading(show) {\n    var loading = document.getElementById("loading");\n    if (show) loading.style.display = "block";else loading.style.display = "none";\n  },\n  getFromLocalStorage: function getFromLocalStorage(key) {\n    var data = JSON.parse(window.localStorage.getItem(key));\n    return data || null;\n  },\n  logout: function logout() {\n    window.localStorage.setItem("current-user", null);\n    app.checkAuth(null);\n  },\n  init: function init(_ref) {\n    var onError = _ref.onError;\n\n    this.onError = function (data) {\n      //dunno logid for?\n      //var logId = app.generateUid();\n      console.log(data);\n      onError(data);\n    };\n    document.title = config.title;\n    app.initContext();\n    app.checkAuth(app.context.CurrentUser);\n\n    //add global loading component\n    var loading = document.createElement("div");\n    document.body.insertBefore(loading, document.body.firstChild);\n    loading.setAttribute("id", "loading");\n    loading.classList.add("loading");\n  },\n  checkAuth: function checkAuth(user) {\n    var curPage = location.pathname.toLowerCase();\n    curPage = curPage.substring(curPage.lastIndexOf("/") + 1);\n    //document.getElementById("logs").innerText = "["+curPage+"]";\n    if (user && curPage == config.routes.Login) location.href = config.routes.Transactions;else if (!user && curPage != config.routes.Login) location.href = config.routes.Login;\n  },\n  initContext: function initContext() {\n    var settings = app.getFromLocalStorage("current-settings");\n    if (settings != null) app.context.Settings = settings;\n\n    var user = app.getFromLocalStorage("current-user");\n    app.context.CurrentUser = user;\n    var room = app.getFromLocalStorage("current-room");\n    if (room == null) app.context.CurrentRoom = app.EmptyRoom;else app.context.CurrentRoom = room;\n  },\n  saveSettings: function saveSettings() {\n    window.localStorage.setItem("current-settings", JSON.stringify(app.context.Settings));\n  },\n  onLoginDone: function onLoginDone(data) {\n    var user = data.data;\n\n    window.localStorage.setItem("current-user", JSON.stringify(user));\n    app.checkAuth(user);\n    //location.href = config.routes.Transactions;\n  },\n  onGetRoomDone: function onGetRoomDone(data) {\n    var room = data.data;\n    window.localStorage.setItem("current-room", JSON.stringify(room));\n  },\n  login: function login(username, password) {\n    app.ajax("auth/login", { username: username, password: password }, "POST", app.onLoginDone);\n  },\n  register: function register(username, password) {\n    app.ajax("auth/register", { username: username, password: password }, "POST", app.onLoginDone);\n  },\n  loadCurrentRoom: function loadCurrentRoom(callback) {\n    return app.ajax("room/status", {}, "POST", function (result) {\n      app.onGetRoomDone(result);\n      callback(result);\n    });\n  }\n};\n\nexports.default = app;//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8vLi9zcmMvanMvYXBwLmpzPzkwZTkiXSwibmFtZXMiOlsiY29uZmlnIiwid3NVcmwiLCJodHRwVXJsIiwidGl0bGUiLCJyb3V0ZXMiLCJMb2dpbiIsIlRyYW5zYWN0aW9ucyIsIlJlcG9ydCIsImFwcCIsIkVtcHR5Um9vbSIsIklkIiwiTmFtZSIsImNvbnRleHQiLCJTZXR0aW5ncyIsImZpbHRlckJ5VXNlcklkIiwiQ3VycmVudFVzZXIiLCJDdXJyZW50Um9vbSIsIlRhYmxlIiwiZ2VuZXJhdGVVaWQiLCJyZXBsYWNlIiwiciIsIk1hdGgiLCJyYW5kb20iLCJ2IiwiYyIsInRvU3RyaW5nIiwiYWpheCIsImFjdGlvblVybCIsImRhdGEiLCJtZXRob2QiLCJzdWNjZXNzQ2FsbGJhY2siLCJlcnJvckNhbGxiYWNrIiwiYXV0aEtleSIsIkF1dGhUb2tlbiIsImFqYXhVcmwiLCJzaG93TG9hZGluZyIsIiQiLCJ0eXBlIiwidXJsIiwiY29udGVudFR5cGUiLCJKU09OIiwic3RyaW5naWZ5IiwiYmVmb3JlU2VuZCIsInJlcXVlc3QiLCJzZXRSZXF1ZXN0SGVhZGVyIiwiY3Jvc3NEb21haW4iLCJjYWNoZSIsInN1Y2Nlc3MiLCJlcnJvciIsInN0YXR1cyIsImxvZ291dCIsIm9uRXJyb3IiLCJjb21wbGV0ZSIsImNvbnNvbGUiLCJsb2ciLCJzaG93IiwibG9hZGluZyIsImRvY3VtZW50IiwiZ2V0RWxlbWVudEJ5SWQiLCJzdHlsZSIsImRpc3BsYXkiLCJnZXRGcm9tTG9jYWxTdG9yYWdlIiwia2V5IiwicGFyc2UiLCJ3aW5kb3ciLCJsb2NhbFN0b3JhZ2UiLCJnZXRJdGVtIiwic2V0SXRlbSIsImNoZWNrQXV0aCIsImluaXQiLCJpbml0Q29udGV4dCIsImNyZWF0ZUVsZW1lbnQiLCJib2R5IiwiaW5zZXJ0QmVmb3JlIiwiZmlyc3RDaGlsZCIsInNldEF0dHJpYnV0ZSIsImNsYXNzTGlzdCIsImFkZCIsInVzZXIiLCJjdXJQYWdlIiwibG9jYXRpb24iLCJwYXRobmFtZSIsInRvTG93ZXJDYXNlIiwic3Vic3RyaW5nIiwibGFzdEluZGV4T2YiLCJocmVmIiwic2V0dGluZ3MiLCJyb29tIiwic2F2ZVNldHRpbmdzIiwib25Mb2dpbkRvbmUiLCJvbkdldFJvb21Eb25lIiwibG9naW4iLCJ1c2VybmFtZSIsInBhc3N3b3JkIiwicmVnaXN0ZXIiLCJsb2FkQ3VycmVudFJvb20iLCJjYWxsYmFjayIsInJlc3VsdCJdLCJtYXBwaW5ncyI6Ijs7Ozs7O0FBQUE7Ozs7OztBQUVBLElBQU1BLFNBQVM7QUFDYjtBQUNBQyxTQUFPLG1DQUZNO0FBR2JDLFdBQVMsaUNBSEk7QUFJYjtBQUNBQyxTQUFPLG9CQUxNO0FBTWJDLFVBQVE7QUFDTkMsV0FBTyxZQUREO0FBRU5DLGtCQUFjLFlBRlI7QUFHTkMsWUFBUTtBQUhGO0FBTkssQ0FBZjs7QUFhQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQTs7QUFFQSxJQUFNQyxNQUFNO0FBQ1ZDLGFBQVc7QUFDVEMsUUFBSSxFQURLO0FBRVRDLFVBQU07QUFGRyxHQUREOztBQU1WQyxXQUFTO0FBQ1BDLGNBQVU7QUFDUkMsc0JBQWdCO0FBRFIsS0FESDtBQUlQQyxpQkFBYSxJQUpOO0FBS1BDLGlCQUFhLElBTE47QUFNUEMsV0FBTztBQU5BLEdBTkM7O0FBZVZDLGFBZlUseUJBZUk7QUFDWixXQUFPLHVDQUF1Q0MsT0FBdkMsQ0FBK0MsT0FBL0MsRUFBd0QsYUFBSztBQUNsRSxVQUFJQyxJQUFLQyxLQUFLQyxNQUFMLEtBQWdCLEVBQWpCLEdBQXVCLENBQS9CO0FBQUEsVUFDRUMsSUFBSUMsS0FBSyxHQUFMLEdBQVdKLENBQVgsR0FBZ0JBLElBQUksR0FBTCxHQUFZLEdBRGpDO0FBRUEsYUFBT0csRUFBRUUsUUFBRixDQUFXLEVBQVgsQ0FBUDtBQUNELEtBSk0sQ0FBUDtBQUtELEdBckJTO0FBdUJWQyxNQXZCVSxnQkF1QkxDLFNBdkJLLEVBdUJNQyxJQXZCTixFQXVCWUMsTUF2QlosRUF1Qm9CQyxlQXZCcEIsRUF1QnFDQyxhQXZCckMsRUF1Qm9EO0FBQUE7O0FBQzVELFFBQUlDLFVBQ0Z4QixJQUFJSSxPQUFKLENBQVlHLFdBQVosSUFBMkIsSUFBM0IsR0FDSSxJQURKLEdBRUlQLElBQUlJLE9BQUosQ0FBWUcsV0FBWixDQUF3QmtCLFNBSDlCO0FBSUEsUUFBSUMsVUFBVWxDLE9BQU9FLE9BQVAsR0FBaUJ5QixTQUEvQjtBQUNBbkIsUUFBSTJCLFdBQUosQ0FBZ0IsSUFBaEI7QUFDQSxXQUFPQyxpQkFBRVYsSUFBRixDQUFPO0FBQ1pXLFlBQU1SLE1BRE07QUFFWlMsV0FBS0osT0FGTztBQUdaSyxtQkFBYSxrQkFIRDtBQUlaWCxZQUFNWSxLQUFLQyxTQUFMLENBQWViLElBQWYsQ0FKTTtBQUtaYyxrQkFBWSxvQkFBU0MsT0FBVCxFQUFrQjtBQUM1QkEsZ0JBQVFDLGdCQUFSLENBQXlCLFdBQXpCLEVBQXNDWixPQUF0QztBQUNELE9BUFc7QUFRWmEsbUJBQWEsSUFSRDtBQVNaQyxhQUFPLEtBVEs7QUFVWkMsZUFBUyxpQkFBU25CLElBQVQsRUFBZTtBQUN0QixZQUFJRSxlQUFKLEVBQXFCQSxnQkFBZ0JGLElBQWhCO0FBQ3RCLE9BWlc7QUFhWm9CLGFBQU8scUJBQVE7QUFDYixZQUFJcEIsS0FBS3FCLE1BQUwsS0FBZ0IsR0FBcEIsRUFBeUI7QUFDdkIsZ0JBQUtDLE1BQUw7QUFDRDtBQUNEMUMsWUFBSTJDLE9BQUosQ0FBWXZCLElBQVo7QUFDRCxPQWxCVztBQW1CWndCLGdCQUFVLG9CQUFXO0FBQ25CNUMsWUFBSTJCLFdBQUosQ0FBZ0IsS0FBaEI7QUFDQWtCLGdCQUFRQyxHQUFSLENBQVksZ0JBQVo7QUFDRDtBQXRCVyxLQUFQLENBQVA7QUF3QkQsR0F0RFM7OztBQXdEVjtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7QUFFQW5CLGFBL0VVLHVCQStFRW9CLElBL0VGLEVBK0VRO0FBQ2hCLFFBQUlDLFVBQVVDLFNBQVNDLGNBQVQsQ0FBd0IsU0FBeEIsQ0FBZDtBQUNBLFFBQUlILElBQUosRUFBVUMsUUFBUUcsS0FBUixDQUFjQyxPQUFkLEdBQXdCLE9BQXhCLENBQVYsS0FDS0osUUFBUUcsS0FBUixDQUFjQyxPQUFkLEdBQXdCLE1BQXhCO0FBQ04sR0FuRlM7QUFxRlZDLHFCQXJGVSwrQkFxRlVDLEdBckZWLEVBcUZlO0FBQ3ZCLFFBQUlsQyxPQUFPWSxLQUFLdUIsS0FBTCxDQUFXQyxPQUFPQyxZQUFQLENBQW9CQyxPQUFwQixDQUE0QkosR0FBNUIsQ0FBWCxDQUFYO0FBQ0EsV0FBT2xDLFFBQVEsSUFBZjtBQUNELEdBeEZTO0FBMEZWc0IsUUExRlUsb0JBMEZEO0FBQ1BjLFdBQU9DLFlBQVAsQ0FBb0JFLE9BQXBCLENBQTRCLGNBQTVCLEVBQTRDLElBQTVDO0FBQ0EzRCxRQUFJNEQsU0FBSixDQUFjLElBQWQ7QUFDRCxHQTdGUztBQStGVkMsTUEvRlUsc0JBK0ZRO0FBQUEsUUFBWGxCLE9BQVcsUUFBWEEsT0FBVzs7QUFDaEIsU0FBS0EsT0FBTCxHQUFlLGdCQUFRO0FBQ3JCO0FBQ0E7QUFDQUUsY0FBUUMsR0FBUixDQUFZMUIsSUFBWjtBQUNBdUIsY0FBUXZCLElBQVI7QUFDRCxLQUxEO0FBTUE2QixhQUFTdEQsS0FBVCxHQUFpQkgsT0FBT0csS0FBeEI7QUFDQUssUUFBSThELFdBQUo7QUFDQTlELFFBQUk0RCxTQUFKLENBQWM1RCxJQUFJSSxPQUFKLENBQVlHLFdBQTFCOztBQUVBO0FBQ0EsUUFBSXlDLFVBQVVDLFNBQVNjLGFBQVQsQ0FBdUIsS0FBdkIsQ0FBZDtBQUNBZCxhQUFTZSxJQUFULENBQWNDLFlBQWQsQ0FBMkJqQixPQUEzQixFQUFvQ0MsU0FBU2UsSUFBVCxDQUFjRSxVQUFsRDtBQUNBbEIsWUFBUW1CLFlBQVIsQ0FBcUIsSUFBckIsRUFBMkIsU0FBM0I7QUFDQW5CLFlBQVFvQixTQUFSLENBQWtCQyxHQUFsQixDQUFzQixTQUF0QjtBQUNELEdBL0dTO0FBaUhWVCxXQWpIVSxxQkFpSEFVLElBakhBLEVBaUhNO0FBQ2QsUUFBSUMsVUFBVUMsU0FBU0MsUUFBVCxDQUFrQkMsV0FBbEIsRUFBZDtBQUNBSCxjQUFVQSxRQUFRSSxTQUFSLENBQWtCSixRQUFRSyxXQUFSLENBQW9CLEdBQXBCLElBQTJCLENBQTdDLENBQVY7QUFDQTtBQUNBLFFBQUlOLFFBQVFDLFdBQVcvRSxPQUFPSSxNQUFQLENBQWNDLEtBQXJDLEVBQ0UyRSxTQUFTSyxJQUFULEdBQWdCckYsT0FBT0ksTUFBUCxDQUFjRSxZQUE5QixDQURGLEtBRUssSUFBSSxDQUFDd0UsSUFBRCxJQUFTQyxXQUFXL0UsT0FBT0ksTUFBUCxDQUFjQyxLQUF0QyxFQUNIMkUsU0FBU0ssSUFBVCxHQUFnQnJGLE9BQU9JLE1BQVAsQ0FBY0MsS0FBOUI7QUFDSCxHQXpIUztBQTJIVmlFLGFBM0hVLHlCQTJISTtBQUNaLFFBQUlnQixXQUFXOUUsSUFBSXFELG1CQUFKLENBQXdCLGtCQUF4QixDQUFmO0FBQ0EsUUFBSXlCLFlBQVksSUFBaEIsRUFBc0I5RSxJQUFJSSxPQUFKLENBQVlDLFFBQVosR0FBdUJ5RSxRQUF2Qjs7QUFFdEIsUUFBSVIsT0FBT3RFLElBQUlxRCxtQkFBSixDQUF3QixjQUF4QixDQUFYO0FBQ0FyRCxRQUFJSSxPQUFKLENBQVlHLFdBQVosR0FBMEIrRCxJQUExQjtBQUNBLFFBQUlTLE9BQU8vRSxJQUFJcUQsbUJBQUosQ0FBd0IsY0FBeEIsQ0FBWDtBQUNBLFFBQUkwQixRQUFRLElBQVosRUFBa0IvRSxJQUFJSSxPQUFKLENBQVlJLFdBQVosR0FBMEJSLElBQUlDLFNBQTlCLENBQWxCLEtBQ0tELElBQUlJLE9BQUosQ0FBWUksV0FBWixHQUEwQnVFLElBQTFCO0FBQ04sR0FwSVM7QUFzSVZDLGNBdElVLDBCQXNJSztBQUNieEIsV0FBT0MsWUFBUCxDQUFvQkUsT0FBcEIsQ0FDRSxrQkFERixFQUVFM0IsS0FBS0MsU0FBTCxDQUFlakMsSUFBSUksT0FBSixDQUFZQyxRQUEzQixDQUZGO0FBSUQsR0EzSVM7QUE2SVY0RSxhQTdJVSx1QkE2SUU3RCxJQTdJRixFQTZJUTtBQUNoQixRQUFJa0QsT0FBT2xELEtBQUtBLElBQWhCOztBQUVBb0MsV0FBT0MsWUFBUCxDQUFvQkUsT0FBcEIsQ0FBNEIsY0FBNUIsRUFBNEMzQixLQUFLQyxTQUFMLENBQWVxQyxJQUFmLENBQTVDO0FBQ0F0RSxRQUFJNEQsU0FBSixDQUFjVSxJQUFkO0FBQ0E7QUFDRCxHQW5KUztBQXFKVlksZUFySlUseUJBcUpJOUQsSUFySkosRUFxSlU7QUFDbEIsUUFBSTJELE9BQU8zRCxLQUFLQSxJQUFoQjtBQUNBb0MsV0FBT0MsWUFBUCxDQUFvQkUsT0FBcEIsQ0FBNEIsY0FBNUIsRUFBNEMzQixLQUFLQyxTQUFMLENBQWU4QyxJQUFmLENBQTVDO0FBQ0QsR0F4SlM7QUEwSlZJLE9BMUpVLGlCQTBKSkMsUUExSkksRUEwSk1DLFFBMUpOLEVBMEpnQjtBQUN4QnJGLFFBQUlrQixJQUFKLENBQ0UsWUFERixFQUVFLEVBQUVrRSxVQUFVQSxRQUFaLEVBQXNCQyxVQUFVQSxRQUFoQyxFQUZGLEVBR0UsTUFIRixFQUlFckYsSUFBSWlGLFdBSk47QUFNRCxHQWpLUztBQW1LVkssVUFuS1Usb0JBbUtERixRQW5LQyxFQW1LU0MsUUFuS1QsRUFtS21CO0FBQzNCckYsUUFBSWtCLElBQUosQ0FDRSxlQURGLEVBRUUsRUFBRWtFLFVBQVVBLFFBQVosRUFBc0JDLFVBQVVBLFFBQWhDLEVBRkYsRUFHRSxNQUhGLEVBSUVyRixJQUFJaUYsV0FKTjtBQU1ELEdBMUtTO0FBNEtWTSxpQkE1S1UsMkJBNEtNQyxRQTVLTixFQTRLZ0I7QUFDeEIsV0FBT3hGLElBQUlrQixJQUFKLENBQVMsYUFBVCxFQUF3QixFQUF4QixFQUE0QixNQUE1QixFQUFvQyxVQUFTdUUsTUFBVCxFQUFpQjtBQUMxRHpGLFVBQUlrRixhQUFKLENBQWtCTyxNQUFsQjtBQUNBRCxlQUFTQyxNQUFUO0FBQ0QsS0FITSxDQUFQO0FBSUQ7QUFqTFMsQ0FBWjs7a0JBb0xlekYsRyIsImZpbGUiOiI3LmpzIiwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0ICQgZnJvbSBcImpxdWVyeVwiO1xuXG5jb25zdCBjb25maWcgPSB7XG4gIC8vd3NVcmw6ICd3czovL2xvY2FsaG9zdDo1MDAwJyxcbiAgd3NVcmw6IFwid3M6Ly9wZy1hcGkuYXp1cmV3ZWJzaXRlcy5uZXQvYXBpXCIsXG4gIGh0dHBVcmw6IFwiLy9wZy1hcGkuYXp1cmV3ZWJzaXRlcy5uZXQvYXBpL1wiLFxuICAvL2h0dHBVcmw6ICdodHRwOi8vbG9jYWxob3N0OjUwMDAvYXBpLycsXG4gIHRpdGxlOiBcIkZyaWVuZHMgVHJpcCB2LjAuMVwiLFxuICByb3V0ZXM6IHtcbiAgICBMb2dpbjogXCJsb2dpbi5odG1sXCIsXG4gICAgVHJhbnNhY3Rpb25zOiBcImluZGV4Lmh0bWxcIixcbiAgICBSZXBvcnQ6IFwicmVwb3J0Lmh0bWxcIlxuICB9XG59O1xuXG4vL2Z1bmN0aW9uIGpzb25wKHVybCwgY2FsbGJhY2spIHtcbi8vICAgIHZhciBjYWxsYmFja05hbWUgPSAnanNvbnBfY2FsbGJhY2tfJyArIE1hdGgucm91bmQoMTAwMDAwICogTWF0aC5yYW5kb20oKSk7XG4vLyAgICB3aW5kb3dbY2FsbGJhY2tOYW1lXSA9IGZ1bmN0aW9uKGRhdGEpIHtcbi8vICAgICAgICBkZWxldGUgd2luZG93W2NhbGxiYWNrTmFtZV07XG4vLyAgICAgICAgZG9jdW1lbnQuYm9keS5yZW1vdmVDaGlsZChzY3JpcHQpO1xuLy8gICAgICAgIGNhbGxiYWNrKGRhdGEpO1xuLy8gICAgfTtcblxuLy8gICAgdmFyIHNjcmlwdCA9IGRvY3VtZW50LmNyZWF0ZUVsZW1lbnQoJ3NjcmlwdCcpO1xuLy8gICAgc2NyaXB0LnNyYyA9IHVybCArICh1cmwuaW5kZXhPZignPycpID49IDAgPyAnJicgOiAnPycpICsgJ2NhbGxiYWNrPScgKyBjYWxsYmFja05hbWU7XG4vLyAgICBkb2N1bWVudC5ib2R5LmFwcGVuZENoaWxkKHNjcmlwdCk7XG4vL31cblxuY29uc3QgYXBwID0ge1xuICBFbXB0eVJvb206IHtcbiAgICBJZDogXCJcIixcbiAgICBOYW1lOiBcIlwiXG4gIH0sXG5cbiAgY29udGV4dDoge1xuICAgIFNldHRpbmdzOiB7XG4gICAgICBmaWx0ZXJCeVVzZXJJZDogXCJcIlxuICAgIH0sXG4gICAgQ3VycmVudFVzZXI6IG51bGwsXG4gICAgQ3VycmVudFJvb206IG51bGwsXG4gICAgVGFibGU6IFtdXG4gIH0sXG5cbiAgZ2VuZXJhdGVVaWQoKSB7XG4gICAgcmV0dXJuIFwieHh4eHh4eHgteHh4eC00eHh4LXl4eHgteHh4eHh4eHh4eHh4XCIucmVwbGFjZSgvW3h5XS9nLCBjID0+IHtcbiAgICAgIHZhciByID0gKE1hdGgucmFuZG9tKCkgKiAxNikgfCAwLFxuICAgICAgICB2ID0gYyA9PSBcInhcIiA/IHIgOiAociAmIDB4MykgfCAweDg7XG4gICAgICByZXR1cm4gdi50b1N0cmluZygxNik7XG4gICAgfSk7XG4gIH0sXG5cbiAgYWpheChhY3Rpb25VcmwsIGRhdGEsIG1ldGhvZCwgc3VjY2Vzc0NhbGxiYWNrLCBlcnJvckNhbGxiYWNrKSB7XG4gICAgdmFyIGF1dGhLZXkgPVxuICAgICAgYXBwLmNvbnRleHQuQ3VycmVudFVzZXIgPT0gbnVsbFxuICAgICAgICA/IG51bGxcbiAgICAgICAgOiBhcHAuY29udGV4dC5DdXJyZW50VXNlci5BdXRoVG9rZW47XG4gICAgdmFyIGFqYXhVcmwgPSBjb25maWcuaHR0cFVybCArIGFjdGlvblVybDtcbiAgICBhcHAuc2hvd0xvYWRpbmcodHJ1ZSk7XG4gICAgcmV0dXJuICQuYWpheCh7XG4gICAgICB0eXBlOiBtZXRob2QsXG4gICAgICB1cmw6IGFqYXhVcmwsXG4gICAgICBjb250ZW50VHlwZTogXCJhcHBsaWNhdGlvbi9qc29uXCIsXG4gICAgICBkYXRhOiBKU09OLnN0cmluZ2lmeShkYXRhKSxcbiAgICAgIGJlZm9yZVNlbmQ6IGZ1bmN0aW9uKHJlcXVlc3QpIHtcbiAgICAgICAgcmVxdWVzdC5zZXRSZXF1ZXN0SGVhZGVyKFwiYXV0aFRva2VuXCIsIGF1dGhLZXkpO1xuICAgICAgfSxcbiAgICAgIGNyb3NzRG9tYWluOiB0cnVlLFxuICAgICAgY2FjaGU6IGZhbHNlLFxuICAgICAgc3VjY2VzczogZnVuY3Rpb24oZGF0YSkge1xuICAgICAgICBpZiAoc3VjY2Vzc0NhbGxiYWNrKSBzdWNjZXNzQ2FsbGJhY2soZGF0YSk7XG4gICAgICB9LFxuICAgICAgZXJyb3I6IGRhdGEgPT4ge1xuICAgICAgICBpZiAoZGF0YS5zdGF0dXMgPT09IDQwMSkge1xuICAgICAgICAgIHRoaXMubG9nb3V0KCk7XG4gICAgICAgIH1cbiAgICAgICAgYXBwLm9uRXJyb3IoZGF0YSk7XG4gICAgICB9LFxuICAgICAgY29tcGxldGU6IGZ1bmN0aW9uKCkge1xuICAgICAgICBhcHAuc2hvd0xvYWRpbmcoZmFsc2UpO1xuICAgICAgICBjb25zb2xlLmxvZyhcImFqYXggY29tcGxldGVkXCIpO1xuICAgICAgfVxuICAgIH0pO1xuICB9LFxuXG4gIC8vIGFqYXgxKGFjdGlvblVybCwgZGF0YSwgbWV0aG9kLCBzdWNjZXNzQ2FsbGJhY2ssIGVycm9yQ2FsbGJhY2spIHtcbiAgLy8gXHQvL3ZhciBhamF4VXJsID0gY29uZmlnLmh0dHBVcmwgKyBhY3Rpb25Vcmw7XG4gIC8vIFx0YXBwLnNob3dMb2FkaW5nKHRydWUpO1xuICAvLyBcdG1ldGhvZCA9IG1ldGhvZCB8fCBcIlBPU1RcIjtcbiAgLy8gXHR2YXIgeGhyID0gbmV3IFhNTEh0dHBSZXF1ZXN0KCk7XG4gIC8vIFx0eGhyLm9wZW4obWV0aG9kLCBjb25maWcuaHR0cFVybCArIGFjdGlvblVybCk7XG4gIC8vIFx0eGhyLnNldFJlcXVlc3RIZWFkZXIoXCJDb250ZW50LVR5cGVcIiwgXCJhcHBsaWNhdGlvbi9qc29uXCIpO1xuICAvLyBcdHhoci5vbmxvYWQgPSBmdW5jdGlvbigpIHtcbiAgLy8gXHRcdGRvY3VtZW50LmdldEVsZW1lbnRCeUlkKFwibG9nc1wiKS5pbm5lclRleHQgPSBcInRlc3Q0XCI7XG4gIC8vIFx0XHRhcHAuc2hvd0xvYWRpbmcoZmFsc2UpO1xuICAvLyBcdFx0aWYgKHhoci5zdGF0dXMgPT09IDIwMCkge1xuICAvLyBcdFx0XHRkb2N1bWVudC5nZXRFbGVtZW50QnlJZChcImxvZ3NcIikuaW5uZXJUZXh0ID0gXCJ0ZXN0NVwiO1xuICAvLyBcdFx0XHRpZiAoc3VjY2Vzc0NhbGxiYWNrKVxuICAvLyBcdFx0XHRcdHN1Y2Nlc3NDYWxsYmFjayhKU09OLnBhcnNlKHhoci5yZXNwb25zZVRleHQpKTtcbiAgLy8gXHRcdH0gZWxzZSB7XG4gIC8vIFx0XHRcdGRvY3VtZW50LmdldEVsZW1lbnRCeUlkKFwibG9nc1wiKS5pbm5lclRleHQgPSBcInRlc3Q2XCI7XG4gIC8vIFx0XHRcdGlmIChlcnJvckNhbGxiYWNrKSBlcnJvckNhbGxiYWNrKHhocik7XG4gIC8vIFx0XHRcdGVsc2UgYXBwLm9uRXJyb3IoeGhyKTtcbiAgLy8gXHRcdH1cbiAgLy8gXHR9O1xuICAvLyBcdHhoci5zZW5kKEpTT04uc3RyaW5naWZ5KGRhdGEpKTtcbiAgLy8gfSxcblxuICBzaG93TG9hZGluZyhzaG93KSB7XG4gICAgdmFyIGxvYWRpbmcgPSBkb2N1bWVudC5nZXRFbGVtZW50QnlJZChcImxvYWRpbmdcIik7XG4gICAgaWYgKHNob3cpIGxvYWRpbmcuc3R5bGUuZGlzcGxheSA9IFwiYmxvY2tcIjtcbiAgICBlbHNlIGxvYWRpbmcuc3R5bGUuZGlzcGxheSA9IFwibm9uZVwiO1xuICB9LFxuXG4gIGdldEZyb21Mb2NhbFN0b3JhZ2Uoa2V5KSB7XG4gICAgdmFyIGRhdGEgPSBKU09OLnBhcnNlKHdpbmRvdy5sb2NhbFN0b3JhZ2UuZ2V0SXRlbShrZXkpKTtcbiAgICByZXR1cm4gZGF0YSB8fCBudWxsO1xuICB9LFxuXG4gIGxvZ291dCgpIHtcbiAgICB3aW5kb3cubG9jYWxTdG9yYWdlLnNldEl0ZW0oXCJjdXJyZW50LXVzZXJcIiwgbnVsbCk7XG4gICAgYXBwLmNoZWNrQXV0aChudWxsKTtcbiAgfSxcblxuICBpbml0KHsgb25FcnJvciB9KSB7XG4gICAgdGhpcy5vbkVycm9yID0gZGF0YSA9PiB7XG4gICAgICAvL2R1bm5vIGxvZ2lkIGZvcj9cbiAgICAgIC8vdmFyIGxvZ0lkID0gYXBwLmdlbmVyYXRlVWlkKCk7XG4gICAgICBjb25zb2xlLmxvZyhkYXRhKTtcbiAgICAgIG9uRXJyb3IoZGF0YSk7XG4gICAgfTtcbiAgICBkb2N1bWVudC50aXRsZSA9IGNvbmZpZy50aXRsZTtcbiAgICBhcHAuaW5pdENvbnRleHQoKTtcbiAgICBhcHAuY2hlY2tBdXRoKGFwcC5jb250ZXh0LkN1cnJlbnRVc2VyKTtcblxuICAgIC8vYWRkIGdsb2JhbCBsb2FkaW5nIGNvbXBvbmVudFxuICAgIHZhciBsb2FkaW5nID0gZG9jdW1lbnQuY3JlYXRlRWxlbWVudChcImRpdlwiKTtcbiAgICBkb2N1bWVudC5ib2R5Lmluc2VydEJlZm9yZShsb2FkaW5nLCBkb2N1bWVudC5ib2R5LmZpcnN0Q2hpbGQpO1xuICAgIGxvYWRpbmcuc2V0QXR0cmlidXRlKFwiaWRcIiwgXCJsb2FkaW5nXCIpO1xuICAgIGxvYWRpbmcuY2xhc3NMaXN0LmFkZChcImxvYWRpbmdcIik7XG4gIH0sXG5cbiAgY2hlY2tBdXRoKHVzZXIpIHtcbiAgICB2YXIgY3VyUGFnZSA9IGxvY2F0aW9uLnBhdGhuYW1lLnRvTG93ZXJDYXNlKCk7XG4gICAgY3VyUGFnZSA9IGN1clBhZ2Uuc3Vic3RyaW5nKGN1clBhZ2UubGFzdEluZGV4T2YoXCIvXCIpICsgMSk7XG4gICAgLy9kb2N1bWVudC5nZXRFbGVtZW50QnlJZChcImxvZ3NcIikuaW5uZXJUZXh0ID0gXCJbXCIrY3VyUGFnZStcIl1cIjtcbiAgICBpZiAodXNlciAmJiBjdXJQYWdlID09IGNvbmZpZy5yb3V0ZXMuTG9naW4pXG4gICAgICBsb2NhdGlvbi5ocmVmID0gY29uZmlnLnJvdXRlcy5UcmFuc2FjdGlvbnM7XG4gICAgZWxzZSBpZiAoIXVzZXIgJiYgY3VyUGFnZSAhPSBjb25maWcucm91dGVzLkxvZ2luKVxuICAgICAgbG9jYXRpb24uaHJlZiA9IGNvbmZpZy5yb3V0ZXMuTG9naW47XG4gIH0sXG5cbiAgaW5pdENvbnRleHQoKSB7XG4gICAgdmFyIHNldHRpbmdzID0gYXBwLmdldEZyb21Mb2NhbFN0b3JhZ2UoXCJjdXJyZW50LXNldHRpbmdzXCIpO1xuICAgIGlmIChzZXR0aW5ncyAhPSBudWxsKSBhcHAuY29udGV4dC5TZXR0aW5ncyA9IHNldHRpbmdzO1xuXG4gICAgdmFyIHVzZXIgPSBhcHAuZ2V0RnJvbUxvY2FsU3RvcmFnZShcImN1cnJlbnQtdXNlclwiKTtcbiAgICBhcHAuY29udGV4dC5DdXJyZW50VXNlciA9IHVzZXI7XG4gICAgdmFyIHJvb20gPSBhcHAuZ2V0RnJvbUxvY2FsU3RvcmFnZShcImN1cnJlbnQtcm9vbVwiKTtcbiAgICBpZiAocm9vbSA9PSBudWxsKSBhcHAuY29udGV4dC5DdXJyZW50Um9vbSA9IGFwcC5FbXB0eVJvb207XG4gICAgZWxzZSBhcHAuY29udGV4dC5DdXJyZW50Um9vbSA9IHJvb207XG4gIH0sXG5cbiAgc2F2ZVNldHRpbmdzKCkge1xuICAgIHdpbmRvdy5sb2NhbFN0b3JhZ2Uuc2V0SXRlbShcbiAgICAgIFwiY3VycmVudC1zZXR0aW5nc1wiLFxuICAgICAgSlNPTi5zdHJpbmdpZnkoYXBwLmNvbnRleHQuU2V0dGluZ3MpXG4gICAgKTtcbiAgfSxcblxuICBvbkxvZ2luRG9uZShkYXRhKSB7XG4gICAgdmFyIHVzZXIgPSBkYXRhLmRhdGE7XG5cbiAgICB3aW5kb3cubG9jYWxTdG9yYWdlLnNldEl0ZW0oXCJjdXJyZW50LXVzZXJcIiwgSlNPTi5zdHJpbmdpZnkodXNlcikpO1xuICAgIGFwcC5jaGVja0F1dGgodXNlcik7XG4gICAgLy9sb2NhdGlvbi5ocmVmID0gY29uZmlnLnJvdXRlcy5UcmFuc2FjdGlvbnM7XG4gIH0sXG5cbiAgb25HZXRSb29tRG9uZShkYXRhKSB7XG4gICAgdmFyIHJvb20gPSBkYXRhLmRhdGE7XG4gICAgd2luZG93LmxvY2FsU3RvcmFnZS5zZXRJdGVtKFwiY3VycmVudC1yb29tXCIsIEpTT04uc3RyaW5naWZ5KHJvb20pKTtcbiAgfSxcblxuICBsb2dpbih1c2VybmFtZSwgcGFzc3dvcmQpIHtcbiAgICBhcHAuYWpheChcbiAgICAgIFwiYXV0aC9sb2dpblwiLFxuICAgICAgeyB1c2VybmFtZTogdXNlcm5hbWUsIHBhc3N3b3JkOiBwYXNzd29yZCB9LFxuICAgICAgXCJQT1NUXCIsXG4gICAgICBhcHAub25Mb2dpbkRvbmVcbiAgICApO1xuICB9LFxuXG4gIHJlZ2lzdGVyKHVzZXJuYW1lLCBwYXNzd29yZCkge1xuICAgIGFwcC5hamF4KFxuICAgICAgXCJhdXRoL3JlZ2lzdGVyXCIsXG4gICAgICB7IHVzZXJuYW1lOiB1c2VybmFtZSwgcGFzc3dvcmQ6IHBhc3N3b3JkIH0sXG4gICAgICBcIlBPU1RcIixcbiAgICAgIGFwcC5vbkxvZ2luRG9uZVxuICAgICk7XG4gIH0sXG5cbiAgbG9hZEN1cnJlbnRSb29tKGNhbGxiYWNrKSB7XG4gICAgcmV0dXJuIGFwcC5hamF4KFwicm9vbS9zdGF0dXNcIiwge30sIFwiUE9TVFwiLCBmdW5jdGlvbihyZXN1bHQpIHtcbiAgICAgIGFwcC5vbkdldFJvb21Eb25lKHJlc3VsdCk7XG4gICAgICBjYWxsYmFjayhyZXN1bHQpO1xuICAgIH0pO1xuICB9XG59O1xuXG5leHBvcnQgZGVmYXVsdCBhcHA7XG4iXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///7\n')}},[[7,1,0]]]);