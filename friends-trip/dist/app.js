(window.webpackJsonp=window.webpackJsonp||[]).push([[2],{2:function(module,exports,__webpack_require__){"use strict";eval('\n\nObject.defineProperty(exports, "__esModule", {\n  value: true\n});\n\nvar _jquery = __webpack_require__(1);\n\nvar _jquery2 = _interopRequireDefault(_jquery);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nvar config = {\n  //wsUrl: \'ws://localhost:5000\',\n  wsUrl: "ws://pg-api.azurewebsites.net/api",\n  httpUrl: "//pg-api.azurewebsites.net/api/",\n  //httpUrl: \'http://localhost:5000/api/\',\n  title: "Friends Trip v.0.1",\n  routes: {\n    Login: "login.html",\n    Transactions: "index.html",\n    Report: "report.html"\n  }\n};\n\n//function jsonp(url, callback) {\n//    var callbackName = \'jsonp_callback_\' + Math.round(100000 * Math.random());\n//    window[callbackName] = function(data) {\n//        delete window[callbackName];\n//        document.body.removeChild(script);\n//        callback(data);\n//    };\n\n//    var script = document.createElement(\'script\');\n//    script.src = url + (url.indexOf(\'?\') >= 0 ? \'&\' : \'?\') + \'callback=\' + callbackName;\n//    document.body.appendChild(script);\n//}\n\nvar app = {\n  EmptyRoom: {\n    Id: "",\n    Name: ""\n  },\n\n  context: {\n    Settings: {\n      filterByUserId: ""\n    },\n    CurrentUser: null,\n    CurrentRoom: null,\n    Table: []\n  },\n\n  generateUid: function generateUid() {\n    return "xxxxxxxx-xxxx-4xxx-yxxx-xxxxxxxxxxxx".replace(/[xy]/g, function (c) {\n      var r = Math.random() * 16 | 0,\n          v = c == "x" ? r : r & 0x3 | 0x8;\n      return v.toString(16);\n    });\n  },\n  onError: function onError(data) {\n    var logTxt = "⛔️ ERROR";\n    var errModel = JSON.parse(data.responseText);\n    app.log(logTxt + " - " + (errModel.message || "kakoy-to bag"));\n    console.log(JSON.stringify(data));\n  },\n  ajax: function ajax(actionUrl, data, method, successCallback, errorCallback) {\n    var authKey = app.context.CurrentUser == null ? null : app.context.CurrentUser.AuthToken;\n    var ajaxUrl = config.httpUrl + actionUrl;\n    app.showLoading(true);\n    return _jquery2.default.ajax({\n      type: method,\n      url: ajaxUrl,\n      contentType: "application/json",\n      data: JSON.stringify(data),\n      beforeSend: function beforeSend(request) {\n        request.setRequestHeader("authToken", authKey);\n      },\n      crossDomain: true,\n      cache: false,\n      success: function success(data) {\n        if (successCallback) successCallback(data);\n      },\n      error: function error(data) {\n        app.onError(data);\n      },\n      complete: function complete() {\n        app.showLoading(false);\n        console.log("ajax completed");\n      }\n    });\n  },\n\n\n  // ajax1(actionUrl, data, method, successCallback, errorCallback) {\n  // \t//var ajaxUrl = config.httpUrl + actionUrl;\n  // \tapp.showLoading(true);\n  // \tmethod = method || "POST";\n  // \tvar xhr = new XMLHttpRequest();\n  // \txhr.open(method, config.httpUrl + actionUrl);\n  // \txhr.setRequestHeader("Content-Type", "application/json");\n  // \txhr.onload = function() {\n  // \t\tdocument.getElementById("logs").innerText = "test4";\n  // \t\tapp.showLoading(false);\n  // \t\tif (xhr.status === 200) {\n  // \t\t\tdocument.getElementById("logs").innerText = "test5";\n  // \t\t\tif (successCallback)\n  // \t\t\t\tsuccessCallback(JSON.parse(xhr.responseText));\n  // \t\t} else {\n  // \t\t\tdocument.getElementById("logs").innerText = "test6";\n  // \t\t\tif (errorCallback) errorCallback(xhr);\n  // \t\t\telse app.onError(xhr);\n  // \t\t}\n  // \t};\n  // \txhr.send(JSON.stringify(data));\n  // },\n\n  showLoading: function showLoading(show) {\n    var loading = document.getElementById("loading");\n    if (show) loading.style.display = "block";else loading.style.display = "none";\n  },\n  getFromLocalStorage: function getFromLocalStorage(key) {\n    var data = JSON.parse(window.localStorage.getItem(key));\n    return data || null;\n  },\n  log: function log(text) {\n    var logBox = document.getElementById("app-log");\n    logBox.innerText = text;\n    logBox.style.display = "block";\n    var logId = app.generateUid();\n    logBox.logId = logId;\n    setTimeout(function () {\n      if (logId == logBox.logId) {\n        logBox.innerText = "";\n        logBox.style.display = "none";\n      }\n    }, 4000);\n  },\n  logout: function logout() {\n    window.localStorage.setItem("current-user", null);\n    app.checkAuth(null);\n  },\n  init: function init() {\n    document.title = config.title;\n    app.initContext();\n    app.checkAuth(app.context.CurrentUser);\n\n    //add logs component\n    (0, _jquery2.default)("body").prepend(\'<div id="app-log"></div>\');\n\n    //add global loading component\n    var loading = document.createElement("div");\n    document.body.insertBefore(loading, document.body.firstChild);\n    loading.setAttribute("id", "loading");\n    loading.classList.add("loading");\n  },\n  checkAuth: function checkAuth(user) {\n    var curPage = location.pathname.toLowerCase();\n    curPage = curPage.substring(curPage.lastIndexOf("/") + 1);\n    //document.getElementById("logs").innerText = "["+curPage+"]";\n    if (user && curPage == config.routes.Login) location.href = config.routes.Transactions;else if (!user && curPage != config.routes.Login) location.href = config.routes.Login;\n  },\n  initContext: function initContext() {\n    var settings = app.getFromLocalStorage("current-settings");\n    if (settings != null) app.context.Settings = settings;\n\n    var user = app.getFromLocalStorage("current-user");\n    app.context.CurrentUser = user;\n    var room = app.getFromLocalStorage("current-room");\n    if (room == null) app.context.CurrentRoom = app.EmptyRoom;else app.context.CurrentRoom = room;\n  },\n  saveSettings: function saveSettings() {\n    window.localStorage.setItem("current-settings", JSON.stringify(app.context.Settings));\n  },\n  onLoginDone: function onLoginDone(data) {\n    var user = data.data;\n\n    window.localStorage.setItem("current-user", JSON.stringify(user));\n    app.checkAuth(user);\n    //location.href = config.routes.Transactions;\n  },\n  onGetRoomDone: function onGetRoomDone(data) {\n    var room = data.data;\n    window.localStorage.setItem("current-room", JSON.stringify(room));\n  },\n  login: function login(username, password) {\n    app.ajax("auth/login", { username: username, password: password }, "POST", app.onLoginDone);\n  },\n  register: function register(username, password) {\n    app.ajax("auth/register", { username: username, password: password }, "POST", app.onLoginDone);\n  },\n  loadCurrentRoom: function loadCurrentRoom(callback) {\n    return app.ajax("room/status", {}, "POST", function (result) {\n      app.onGetRoomDone(result);\n      callback(result);\n    });\n  }\n};\n\nexports.default = app;//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8vLi9zcmMvanMvYXBwLmpzPzkwZTkiXSwibmFtZXMiOlsiY29uZmlnIiwid3NVcmwiLCJodHRwVXJsIiwidGl0bGUiLCJyb3V0ZXMiLCJMb2dpbiIsIlRyYW5zYWN0aW9ucyIsIlJlcG9ydCIsImFwcCIsIkVtcHR5Um9vbSIsIklkIiwiTmFtZSIsImNvbnRleHQiLCJTZXR0aW5ncyIsImZpbHRlckJ5VXNlcklkIiwiQ3VycmVudFVzZXIiLCJDdXJyZW50Um9vbSIsIlRhYmxlIiwiZ2VuZXJhdGVVaWQiLCJyZXBsYWNlIiwiciIsIk1hdGgiLCJyYW5kb20iLCJ2IiwiYyIsInRvU3RyaW5nIiwib25FcnJvciIsImRhdGEiLCJsb2dUeHQiLCJlcnJNb2RlbCIsIkpTT04iLCJwYXJzZSIsInJlc3BvbnNlVGV4dCIsImxvZyIsIm1lc3NhZ2UiLCJjb25zb2xlIiwic3RyaW5naWZ5IiwiYWpheCIsImFjdGlvblVybCIsIm1ldGhvZCIsInN1Y2Nlc3NDYWxsYmFjayIsImVycm9yQ2FsbGJhY2siLCJhdXRoS2V5IiwiQXV0aFRva2VuIiwiYWpheFVybCIsInNob3dMb2FkaW5nIiwiJCIsInR5cGUiLCJ1cmwiLCJjb250ZW50VHlwZSIsImJlZm9yZVNlbmQiLCJyZXF1ZXN0Iiwic2V0UmVxdWVzdEhlYWRlciIsImNyb3NzRG9tYWluIiwiY2FjaGUiLCJzdWNjZXNzIiwiZXJyb3IiLCJjb21wbGV0ZSIsInNob3ciLCJsb2FkaW5nIiwiZG9jdW1lbnQiLCJnZXRFbGVtZW50QnlJZCIsInN0eWxlIiwiZGlzcGxheSIsImdldEZyb21Mb2NhbFN0b3JhZ2UiLCJrZXkiLCJ3aW5kb3ciLCJsb2NhbFN0b3JhZ2UiLCJnZXRJdGVtIiwidGV4dCIsImxvZ0JveCIsImlubmVyVGV4dCIsImxvZ0lkIiwic2V0VGltZW91dCIsImxvZ291dCIsInNldEl0ZW0iLCJjaGVja0F1dGgiLCJpbml0IiwiaW5pdENvbnRleHQiLCJwcmVwZW5kIiwiY3JlYXRlRWxlbWVudCIsImJvZHkiLCJpbnNlcnRCZWZvcmUiLCJmaXJzdENoaWxkIiwic2V0QXR0cmlidXRlIiwiY2xhc3NMaXN0IiwiYWRkIiwidXNlciIsImN1clBhZ2UiLCJsb2NhdGlvbiIsInBhdGhuYW1lIiwidG9Mb3dlckNhc2UiLCJzdWJzdHJpbmciLCJsYXN0SW5kZXhPZiIsImhyZWYiLCJzZXR0aW5ncyIsInJvb20iLCJzYXZlU2V0dGluZ3MiLCJvbkxvZ2luRG9uZSIsIm9uR2V0Um9vbURvbmUiLCJsb2dpbiIsInVzZXJuYW1lIiwicGFzc3dvcmQiLCJyZWdpc3RlciIsImxvYWRDdXJyZW50Um9vbSIsImNhbGxiYWNrIiwicmVzdWx0Il0sIm1hcHBpbmdzIjoiOzs7Ozs7QUFBQTs7Ozs7O0FBRUEsSUFBTUEsU0FBUztBQUNiO0FBQ0FDLFNBQU8sbUNBRk07QUFHYkMsV0FBUyxpQ0FISTtBQUliO0FBQ0FDLFNBQU8sb0JBTE07QUFNYkMsVUFBUTtBQUNOQyxXQUFPLFlBREQ7QUFFTkMsa0JBQWMsWUFGUjtBQUdOQyxZQUFRO0FBSEY7QUFOSyxDQUFmOztBQWFBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTtBQUNBOztBQUVBLElBQU1DLE1BQU07QUFDVkMsYUFBVztBQUNUQyxRQUFJLEVBREs7QUFFVEMsVUFBTTtBQUZHLEdBREQ7O0FBTVZDLFdBQVM7QUFDUEMsY0FBVTtBQUNSQyxzQkFBZ0I7QUFEUixLQURIO0FBSVBDLGlCQUFhLElBSk47QUFLUEMsaUJBQWEsSUFMTjtBQU1QQyxXQUFPO0FBTkEsR0FOQzs7QUFlVkMsYUFmVSx5QkFlSTtBQUNaLFdBQU8sdUNBQXVDQyxPQUF2QyxDQUErQyxPQUEvQyxFQUF3RCxhQUFLO0FBQ2xFLFVBQUlDLElBQUtDLEtBQUtDLE1BQUwsS0FBZ0IsRUFBakIsR0FBdUIsQ0FBL0I7QUFBQSxVQUNFQyxJQUFJQyxLQUFLLEdBQUwsR0FBV0osQ0FBWCxHQUFnQkEsSUFBSSxHQUFMLEdBQVksR0FEakM7QUFFQSxhQUFPRyxFQUFFRSxRQUFG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QUFMLENBQWU0RCxJQUFmLENBQTVDO0FBQ0QsR0F2S1M7QUF5S1ZJLE9BektVLGlCQXlLSkMsUUF6S0ksRUF5S01DLFFBektOLEVBeUtnQjtBQUN4QjlGLFFBQUk2QixJQUFKLENBQ0UsWUFERixFQUVFLEVBQUVnRSxVQUFVQSxRQUFaLEVBQXNCQyxVQUFVQSxRQUFoQyxFQUZGLEVBR0UsTUFIRixFQUlFOUYsSUFBSTBGLFdBSk47QUFNRCxHQWhMUztBQWtMVkssVUFsTFUsb0JBa0xERixRQWxMQyxFQWtMU0MsUUFsTFQsRUFrTG1CO0FBQzNCOUYsUUFBSTZCLElBQUosQ0FDRSxlQURGLEVBRUUsRUFBRWdFLFVBQVVBLFFBQVosRUFBc0JDLFVBQVVBLFFBQWhDLEVBRkYsRUFHRSxNQUhGLEVBSUU5RixJQUFJMEYsV0FKTjtBQU1ELEdBekxTO0FBMkxWTSxpQkEzTFUsMkJBMkxNQyxRQTNMTixFQTJMZ0I7QUFDeEIsV0FBT2pHLElBQUk2QixJQUFKLENBQVMsYUFBVCxFQUF3QixFQUF4QixFQUE0QixNQUE1QixFQUFvQyxVQUFTcUUsTUFBVCxFQUFpQjtBQUMxRGxHLFVBQUkyRixhQUFKLENBQWtCTyxNQUFsQjtBQUNBRCxlQUFTQyxNQUFUO0FBQ0QsS0FITSxDQUFQO0FBSUQ7QUFoTVMsQ0FBWjs7a0JBbU1lbEcsRyIsImZpbGUiOiIyLmpzIiwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0ICQgZnJvbSBcImpxdWVyeVwiO1xuXG5jb25zdCBjb25maWcgPSB7XG4gIC8vd3NVcmw6ICd3czovL2xvY2FsaG9zdDo1MDAwJyxcbiAgd3NVcmw6IFwid3M6Ly9wZy1hcGkuYXp1cmV3ZWJzaXRlcy5uZXQvYXBpXCIsXG4gIGh0dHBVcmw6IFwiLy9wZy1hcGkuYXp1cmV3ZWJzaXRlcy5uZXQvYXBpL1wiLFxuICAvL2h0dHBVcmw6ICdodHRwOi8vbG9jYWxob3N0OjUwMDAvYXBpLycsXG4gIHRpdGxlOiBcIkZyaWVuZHMgVHJpcCB2LjAuMVwiLFxuICByb3V0ZXM6IHtcbiAgICBMb2dpbjogXCJsb2dpbi5odG1sXCIsXG4gICAgVHJhbnNhY3Rpb25zOiBcImluZGV4Lmh0bWxcIixcbiAgICBSZXBvcnQ6IFwicmVwb3J0Lmh0bWxcIlxuICB9XG59O1xuXG4vL2Z1bmN0aW9uIGpzb25wKHVybCwgY2FsbGJhY2spIHtcbi8vICAgIHZhciBjYWxsYmFja05hbWUgPSAnanNvbnBfY2FsbGJhY2tfJyArIE1hdGgucm91bmQoMTAwMDAwICogTWF0aC5yYW5kb20oKSk7XG4vLyAgICB3aW5kb3dbY2FsbGJhY2tOYW1lXSA9IGZ1bmN0aW9uKGRhdGEpIHtcbi8vICAgICAgICBkZWxldGUgd2luZG93W2NhbGxiYWNrTmFtZV07XG4vLyAgICAgICAgZG9jdW1lbnQuYm9keS5yZW1vdmVDaGlsZChzY3JpcHQpO1xuLy8gICAgICAgIGNhbGxiYWNrKGRhdGEpO1xuLy8gICAgfTtcblxuLy8gICAgdmFyIHNjcmlwdCA9IGRvY3VtZW50LmNyZWF0ZUVsZW1lbnQoJ3NjcmlwdCcpO1xuLy8gICAgc2NyaXB0LnNyYyA9IHVybCArICh1cmwuaW5kZXhPZignPycpID49IDAgPyAnJicgOiAnPycpICsgJ2NhbGxiYWNrPScgKyBjYWxsYmFja05hbWU7XG4vLyAgICBkb2N1bWVudC5ib2R5LmFwcGVuZENoaWxkKHNjcmlwdCk7XG4vL31cblxuY29uc3QgYXBwID0ge1xuICBFbXB0eVJvb206IHtcbiAgICBJZDogXCJcIixcbiAgICBOYW1lOiBcIlwiXG4gIH0sXG5cbiAgY29udGV4dDoge1xuICAgIFNldHRpbmdzOiB7XG4gICAgICBmaWx0ZXJCeVVzZXJJZDogXCJcIlxuICAgIH0sXG4gICAgQ3VycmVudFVzZXI6IG51bGwsXG4gICAgQ3VycmVudFJvb206IG51bGwsXG4gICAgVGFibGU6IFtdXG4gIH0sXG5cbiAgZ2VuZXJhdGVVaWQoKSB7XG4gICAgcmV0dXJuIFwieHh4eHh4eHgteHh4eC00eHh4LXl4eHgteHh4eHh4eHh4eHh4XCIucmVwbGFjZSgvW3h5XS9nLCBjID0+IHtcbiAgICAgIHZhciByID0gKE1hdGgucmFuZG9tKCkgKiAxNikgfCAwLFxuICAgICAgICB2ID0gYyA9PSBcInhcIiA/IHIgOiAociAmIDB4MykgfCAweDg7XG4gICAgICByZXR1cm4gdi50b1N0cmluZygxNik7XG4gICAgfSk7XG4gIH0sXG5cbiAgb25FcnJvcihkYXRhKSB7XG4gICAgdmFyIGxvZ1R4dCA9IFwi4puU77iPIEVSUk9SXCI7XG4gICAgdmFyIGVyck1vZGVsID0gSlNPTi5wYXJzZShkYXRhLnJlc3BvbnNlVGV4dCk7XG4gICAgYXBwLmxvZyhgJHtsb2dUeHR9IC0gJHtlcnJNb2RlbC5tZXNzYWdlIHx8IFwia2Frb3ktdG8gYmFnXCJ9YCk7XG4gICAgY29uc29sZS5sb2coSlNPTi5zdHJpbmdpZnkoZGF0YSkpO1xuICB9LFxuXG4gIGFqYXgoYWN0aW9uVXJsLCBkYXRhLCBtZXRob2QsIHN1Y2Nlc3NDYWxsYmFjaywgZXJyb3JDYWxsYmFjaykge1xuICAgIHZhciBhdXRoS2V5ID1cbiAgICAgIGFwcC5jb250ZXh0LkN1cnJlbnRVc2VyID09IG51bGxcbiAgICAgICAgPyBudWxsXG4gICAgICAgIDogYXBwLmNvbnRleHQuQ3VycmVudFVzZXIuQXV0aFRva2VuO1xuICAgIHZhciBhamF4VXJsID0gY29uZmlnLmh0dHBVcmwgKyBhY3Rpb25Vcmw7XG4gICAgYXBwLnNob3dMb2FkaW5nKHRydWUpO1xuICAgIHJldHVybiAkLmFqYXgoe1xuICAgICAgdHlwZTogbWV0aG9kLFxuICAgICAgdXJsOiBhamF4VXJsLFxuICAgICAgY29udGVudFR5cGU6IFwiYXBwbGljYXRpb24vanNvblwiLFxuICAgICAgZGF0YTogSlNPTi5zdHJpbmdpZnkoZGF0YSksXG4gICAgICBiZWZvcmVTZW5kOiBmdW5jdGlvbihyZXF1ZXN0KSB7XG4gICAgICAgIHJlcXVlc3Quc2V0UmVxdWVzdEhlYWRlcihcImF1dGhUb2tlblwiLCBhdXRoS2V5KTtcbiAgICAgIH0sXG4gICAgICBjcm9zc0RvbWFpbjogdHJ1ZSxcbiAgICAgIGNhY2hlOiBmYWxzZSxcbiAgICAgIHN1Y2Nlc3M6IGZ1bmN0aW9uKGRhdGEpIHtcbiAgICAgICAgaWYgKHN1Y2Nlc3NDYWxsYmFjaykgc3VjY2Vzc0NhbGxiYWNrKGRhdGEpO1xuICAgICAgfSxcbiAgICAgIGVycm9yOiBmdW5jdGlvbihkYXRhKSB7XG4gICAgICAgIGFwcC5vbkVycm9yKGRhdGEpO1xuICAgICAgfSxcbiAgICAgIGNvbXBsZXRlOiBmdW5jdGlvbigpIHtcbiAgICAgICAgYXBwLnNob3dMb2FkaW5nKGZhbHNlKTtcbiAgICAgICAgY29uc29sZS5sb2coXCJhamF4IGNvbXBsZXRlZFwiKTtcbiAgICAgIH1cbiAgICB9KTtcbiAgfSxcblxuICAvLyBhamF4MShhY3Rpb25VcmwsIGRhdGEsIG1ldGhvZCwgc3VjY2Vzc0NhbGxiYWNrLCBlcnJvckNhbGxiYWNrKSB7XG4gIC8vIFx0Ly92YXIgYWpheFVybCA9IGNvbmZpZy5odHRwVXJsICsgYWN0aW9uVXJsO1xuICAvLyBcdGFwcC5zaG93TG9hZGluZyh0cnVlKTtcbiAgLy8gXHRtZXRob2QgPSBtZXRob2QgfHwgXCJQT1NUXCI7XG4gIC8vIFx0dmFyIHhociA9IG5ldyBYTUxIdHRwUmVxdWVzdCgpO1xuICAvLyBcdHhoci5vcGVuKG1ldGhvZCwgY29uZmlnLmh0dHBVcmwgKyBhY3Rpb25VcmwpO1xuICAvLyBcdHhoci5zZXRSZXF1ZXN0SGVhZGVyKFwiQ29udGVudC1UeXBlXCIsIFwiYXBwbGljYXRpb24vanNvblwiKTtcbiAgLy8gXHR4aHIub25sb2FkID0gZnVuY3Rpb24oKSB7XG4gIC8vIFx0XHRkb2N1bWVudC5nZXRFbGVtZW50QnlJZChcImxvZ3NcIikuaW5uZXJUZXh0ID0gXCJ0ZXN0NFwiO1xuICAvLyBcdFx0YXBwLnNob3dMb2FkaW5nKGZhbHNlKTtcbiAgLy8gXHRcdGlmICh4aHIuc3RhdHVzID09PSAyMDApIHtcbiAgLy8gXHRcdFx0ZG9jdW1lbnQuZ2V0RWxlbWVudEJ5SWQoXCJsb2dzXCIpLmlubmVyVGV4dCA9IFwidGVzdDVcIjtcbiAgLy8gXHRcdFx0aWYgKHN1Y2Nlc3NDYWxsYmFjaylcbiAgLy8gXHRcdFx0XHRzdWNjZXNzQ2FsbGJhY2soSlNPTi5wYXJzZSh4aHIucmVzcG9uc2VUZXh0KSk7XG4gIC8vIFx0XHR9IGVsc2Uge1xuICAvLyBcdFx0XHRkb2N1bWVudC5nZXRFbGVtZW50QnlJZChcImxvZ3NcIikuaW5uZXJUZXh0ID0gXCJ0ZXN0NlwiO1xuICAvLyBcdFx0XHRpZiAoZXJyb3JDYWxsYmFjaykgZXJyb3JDYWxsYmFjayh4aHIpO1xuICAvLyBcdFx0XHRlbHNlIGFwcC5vbkVycm9yKHhocik7XG4gIC8vIFx0XHR9XG4gIC8vIFx0fTtcbiAgLy8gXHR4aHIuc2VuZChKU09OLnN0cmluZ2lmeShkYXRhKSk7XG4gIC8vIH0sXG5cbiAgc2hvd0xvYWRpbmcoc2hvdykge1xuICAgIHZhciBsb2FkaW5nID0gZG9jdW1lbnQuZ2V0RWxlbWVudEJ5SWQoXCJsb2FkaW5nXCIpO1xuICAgIGlmIChzaG93KSBsb2FkaW5nLnN0eWxlLmRpc3BsYXkgPSBcImJsb2NrXCI7XG4gICAgZWxzZSBsb2FkaW5nLnN0eWxlLmRpc3BsYXkgPSBcIm5vbmVcIjtcbiAgfSxcblxuICBnZXRGcm9tTG9jYWxTdG9yYWdlKGtleSkge1xuICAgIHZhciBkYXRhID0gSlNPTi5wYXJzZSh3aW5kb3cubG9jYWxTdG9yYWdlLmdldEl0ZW0oa2V5KSk7XG4gICAgcmV0dXJuIGRhdGEgfHwgbnVsbDtcbiAgfSxcblxuICBsb2codGV4dCkge1xuICAgIHZhciBsb2dCb3ggPSBkb2N1bWVudC5nZXRFbGVtZW50QnlJZChcImFwcC1sb2dcIik7XG4gICAgbG9nQm94LmlubmVyVGV4dCA9IHRleHQ7XG4gICAgbG9nQm94LnN0eWxlLmRpc3BsYXkgPSBcImJsb2NrXCI7XG4gICAgdmFyIGxvZ0lkID0gYXBwLmdlbmVyYXRlVWlkKCk7XG4gICAgbG9nQm94LmxvZ0lkID0gbG9nSWQ7XG4gICAgc2V0VGltZW91dChmdW5jdGlvbigpIHtcbiAgICAgIGlmIChsb2dJZCA9PSBsb2dCb3gubG9nSWQpIHtcbiAgICAgICAgbG9nQm94LmlubmVyVGV4dCA9IFwiXCI7XG4gICAgICAgIGxvZ0JveC5zdHlsZS5kaXNwbGF5ID0gXCJub25lXCI7XG4gICAgICB9XG4gICAgfSwgNDAwMCk7XG4gIH0sXG5cbiAgbG9nb3V0KCkge1xuICAgIHdpbmRvdy5sb2NhbFN0b3JhZ2Uuc2V0SXRlbShcImN1cnJlbnQtdXNlclwiLCBudWxsKTtcbiAgICBhcHAuY2hlY2tBdXRoKG51bGwpO1xuICB9LFxuXG4gIGluaXQoKSB7XG4gICAgZG9jdW1lbnQudGl0bGUgPSBjb25maWcudGl0bGU7XG4gICAgYXBwLmluaXRDb250ZXh0KCk7XG4gICAgYXBwLmNoZWNrQXV0aChhcHAuY29udGV4dC5DdXJyZW50VXNlcik7XG5cbiAgICAvL2FkZCBsb2dzIGNvbXBvbmVudFxuICAgICQoXCJib2R5XCIpLnByZXBlbmQoJzxkaXYgaWQ9XCJhcHAtbG9nXCI+PC9kaXY+Jyk7XG5cbiAgICAvL2FkZCBnbG9iYWwgbG9hZGluZyBjb21wb25lbnRcbiAgICB2YXIgbG9hZGluZyA9IGRvY3VtZW50LmNyZWF0ZUVsZW1lbnQoXCJkaXZcIik7XG4gICAgZG9jdW1lbnQuYm9keS5pbnNlcnRCZWZvcmUobG9hZGluZywgZG9jdW1lbnQuYm9keS5maXJzdENoaWxkKTtcbiAgICBsb2FkaW5nLnNldEF0dHJpYnV0ZShcImlkXCIsIFwibG9hZGluZ1wiKTtcbiAgICBsb2FkaW5nLmNsYXNzTGlzdC5hZGQoXCJsb2FkaW5nXCIpO1xuICB9LFxuXG4gIGNoZWNrQXV0aCh1c2VyKSB7XG4gICAgdmFyIGN1clBhZ2UgPSBsb2NhdGlvbi5wYXRobmFtZS50b0xvd2VyQ2FzZSgpO1xuICAgIGN1clBhZ2UgPSBjdXJQYWdlLnN1YnN0cmluZyhjdXJQYWdlLmxhc3RJbmRleE9mKFwiL1wiKSArIDEpO1xuICAgIC8vZG9jdW1lbnQuZ2V0RWxlbWVudEJ5SWQoXCJsb2dzXCIpLmlubmVyVGV4dCA9IFwiW1wiK2N1clBhZ2UrXCJdXCI7XG4gICAgaWYgKHVzZXIgJiYgY3VyUGFnZSA9PSBjb25maWcucm91dGVzLkxvZ2luKVxuICAgICAgbG9jYXRpb24uaHJlZiA9IGNvbmZpZy5yb3V0ZXMuVHJhbnNhY3Rpb25zO1xuICAgIGVsc2UgaWYgKCF1c2VyICYmIGN1clBhZ2UgIT0gY29uZmlnLnJvdXRlcy5Mb2dpbilcbiAgICAgIGxvY2F0aW9uLmhyZWYgPSBjb25maWcucm91dGVzLkxvZ2luO1xuICB9LFxuXG4gIGluaXRDb250ZXh0KCkge1xuICAgIHZhciBzZXR0aW5ncyA9IGFwcC5nZXRGcm9tTG9jYWxTdG9yYWdlKFwiY3VycmVudC1zZXR0aW5nc1wiKTtcbiAgICBpZiAoc2V0dGluZ3MgIT0gbnVsbCkgYXBwLmNvbnRleHQuU2V0dGluZ3MgPSBzZXR0aW5ncztcblxuICAgIHZhciB1c2VyID0gYXBwLmdldEZyb21Mb2NhbFN0b3JhZ2UoXCJjdXJyZW50LXVzZXJcIik7XG4gICAgYXBwLmNvbnRleHQuQ3VycmVudFVzZXIgPSB1c2VyO1xuICAgIHZhciByb29tID0gYXBwLmdldEZyb21Mb2NhbFN0b3JhZ2UoXCJjdXJyZW50LXJvb21cIik7XG4gICAgaWYgKHJvb20gPT0gbnVsbCkgYXBwLmNvbnRleHQuQ3VycmVudFJvb20gPSBhcHAuRW1wdHlSb29tO1xuICAgIGVsc2UgYXBwLmNvbnRleHQuQ3VycmVudFJvb20gPSByb29tO1xuICB9LFxuXG4gIHNhdmVTZXR0aW5ncygpIHtcbiAgICB3aW5kb3cubG9jYWxTdG9yYWdlLnNldEl0ZW0oXG4gICAgICBcImN1cnJlbnQtc2V0dGluZ3NcIixcbiAgICAgIEpTT04uc3RyaW5naWZ5KGFwcC5jb250ZXh0LlNldHRpbmdzKVxuICAgICk7XG4gIH0sXG5cbiAgb25Mb2dpbkRvbmUoZGF0YSkge1xuICAgIHZhciB1c2VyID0gZGF0YS5kYXRhO1xuXG4gICAgd2luZG93LmxvY2FsU3RvcmFnZS5zZXRJdGVtKFwiY3VycmVudC11c2VyXCIsIEpTT04uc3RyaW5naWZ5KHVzZXIpKTtcbiAgICBhcHAuY2hlY2tBdXRoKHVzZXIpO1xuICAgIC8vbG9jYXRpb24uaHJlZiA9IGNvbmZpZy5yb3V0ZXMuVHJhbnNhY3Rpb25zO1xuICB9LFxuXG4gIG9uR2V0Um9vbURvbmUoZGF0YSkge1xuICAgIHZhciByb29tID0gZGF0YS5kYXRhO1xuICAgIHdpbmRvdy5sb2NhbFN0b3JhZ2Uuc2V0SXRlbShcImN1cnJlbnQtcm9vbVwiLCBKU09OLnN0cmluZ2lmeShyb29tKSk7XG4gIH0sXG5cbiAgbG9naW4odXNlcm5hbWUsIHBhc3N3b3JkKSB7XG4gICAgYXBwLmFqYXgoXG4gICAgICBcImF1dGgvbG9naW5cIixcbiAgICAgIHsgdXNlcm5hbWU6IHVzZXJuYW1lLCBwYXNzd29yZDogcGFzc3dvcmQgfSxcbiAgICAgIFwiUE9TVFwiLFxuICAgICAgYXBwLm9uTG9naW5Eb25lXG4gICAgKTtcbiAgfSxcblxuICByZWdpc3Rlcih1c2VybmFtZSwgcGFzc3dvcmQpIHtcbiAgICBhcHAuYWpheChcbiAgICAgIFwiYXV0aC9yZWdpc3RlclwiLFxuICAgICAgeyB1c2VybmFtZTogdXNlcm5hbWUsIHBhc3N3b3JkOiBwYXNzd29yZCB9LFxuICAgICAgXCJQT1NUXCIsXG4gICAgICBhcHAub25Mb2dpbkRvbmVcbiAgICApO1xuICB9LFxuXG4gIGxvYWRDdXJyZW50Um9vbShjYWxsYmFjaykge1xuICAgIHJldHVybiBhcHAuYWpheChcInJvb20vc3RhdHVzXCIsIHt9LCBcIlBPU1RcIiwgZnVuY3Rpb24ocmVzdWx0KSB7XG4gICAgICBhcHAub25HZXRSb29tRG9uZShyZXN1bHQpO1xuICAgICAgY2FsbGJhY2socmVzdWx0KTtcbiAgICB9KTtcbiAgfVxufTtcblxuZXhwb3J0IGRlZmF1bHQgYXBwO1xuIl0sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///2\n')}},[[2,1,0]]]);